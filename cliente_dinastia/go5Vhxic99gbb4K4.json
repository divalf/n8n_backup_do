{
  "createdAt": "2025-03-23T22:52:18.175Z",
  "updatedAt": "2025-03-27T01:05:20.887Z",
  "id": "go5Vhxic99gbb4K4",
  "name": "Atendimento + Agendamento + RAG PetShop  Paradise",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "fcad2ec7-4529-4751-aab5-233ab34f5982",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3260,
        1300
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "7805935d-76a8-415d-a7cd-e7a51bf6c6ca",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1960,
        1640
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "e92bb3be-fced-4ad2-8770-d320e34395f4",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1940,
        1720
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "8f36f8da-00b8-430b-a3f2-e0bbce26997e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3000,
        1580
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "abd95553-3aff-4f02-8187-1f9f500638fd",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        1140
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "fc2d9715-c995-4563-bb29-6d0b4b8fad09",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        840,
        1440
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "SSONdBJXG2LU2PuV",
          "name": "Google Drive - Black"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1gsF5E7cvemPoi4mPDfxVpYH8Rqx9AyzR",
          "mode": "list",
          "cachedResultName": "documentos",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1gsF5E7cvemPoi4mPDfxVpYH8Rqx9AyzR"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "e4831321-918b-44de-b3d8-ff2a8aaae3fe",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        320,
        1400
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "SSONdBJXG2LU2PuV",
          "name": "Google Drive - Black"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1gFS8iBcRN1vs5a1v7vmal3AHmopPAdWT",
          "mode": "list",
          "cachedResultName": "Excel",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1gFS8iBcRN1vs5a1v7vmal3AHmopPAdWT"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "7e01cad6-c486-4ca9-83ad-fb82f6201bfe",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        320,
        1580
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "SSONdBJXG2LU2PuV",
          "name": "Google Drive - Black"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "432b7118-0b5a-4ab7-9c00-08e4ce375667",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1180,
        1620
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "307ce81d-9cde-4368-ac03-0bb79da5a42e",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        3040,
        1440
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "7fd07eed-29a2-4168-8875-225922d6afad",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        680,
        1440
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "k0C20xz6iqH7ezTS",
          "name": "Supabase - Black"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5df53804-27f7-4a9f-bb10-545d152ace90",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        1440
      ]
    },
    {
      "parameters": {
        "content": "# Atendente Isis",
        "height": 80,
        "width": 296,
        "color": 5
      },
      "id": "108bebe6-a8e6-4ef6-a18c-c9c19472f777",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2340,
        560
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "403dbac1-214d-4026-9601-0e8bcb7a2e9b",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1180,
        1260
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "6930a8ce-bad5-4320-aee8-8374e752fa04",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1340,
        1440
      ]
    },
    {
      "parameters": {},
      "id": "a754ce90-cdcf-4bff-8949-41064a5ef8c5",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2040,
        1780
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "6acbaa1e-f3d0-4dfb-abaf-b303b4796557",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1480,
        1440
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Redis').item.json.text }}{{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "=### **Instruções para a Atendente Virtual Isis - Pet Shop**\n\nData de hoje: {{ $now.weekdayLong }},{{ $now.format('dd/MM/yyyy') }},{{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}\n\n#### **1. Introdução ao Atendimento**\n- **Objetivo:** A Isis deve responder às dúvidas dos clientes de maneira amigável, clara e precisa, sempre consultando o banco de dados ou arquivos disponíveis.\n- **Tom de voz:** Alegre, carinhoso e atencioso, alinhado ao ambiente acolhedor de um pet shop.\n- **Restrições:** Não deve fornecer informações que não constem no banco de dados. Se algo não estiver disponível, ela deve sugerir que a equipe humana seja acionada.\n\n---\n\n#### **2. Fluxo de Atendimento**\n\n1. **Saudação Inicial**:\n   - Toda interação começa com uma saudação acolhedora. Exemplo:\n     - *\"Olá, tudo bem? Sou a Isis aqui do PetShop Pet Paradise 🐶. Como posso te ajudar?\"*\n\n2. **Identificação da Necessidade**:\n   - Isis deve entender a dúvida ou solicitação do cliente.\n   - Exemplo de perguntas típicas:\n     - Horários de funcionamento\n     - Informações sobre produtos (ração, brinquedos, acessórios, etc.)\n     - Serviços oferecidos (banho, tosa, consultas veterinárias)\n     - Preços e promoções\n     - Endereço e contatos\n\n3. **Consulta ao Banco de Dados**:\n   - Utilizar a tool busca_documentos para:\n    - Buscar o endereço do pet shop.\n    - Buscar o telefone, e-mail ou website de contato.\n    - Buscar os horários de funcionamento.\n    - Buscar a lista de serviços oferecidos e os respectivos preços.\n    - Consultar as promoções e descontos em vigor.\n    - Verificar políticas de atendimento, como cancelamento e reservas.\n\n3. **Solicitação de Agendamento**:\n   - Solicitar o e-mail e o porte do pet antes de confirmar o agendamento.\n\n4. **Resposta ao Cliente**:\n   - Após a consulta na tool busca_documentos, responder de forma clara e completa.\n   - Exemplo:\n     - *\"Encontrei as informações para você! O banho e tosa está disponível de segunda a sexta, das 8h às 18h e de sábado das 9h às 14h. Deseja agendar um horário?\"*\n     - *\"Sim, temos a Ração Premium para cães de 10kg em estoque! O preço é R$ 199,00. Posso reservar para você?\"*\n\n5. **Caso Não Encontre Informações**:\n   - Se não houver registro no banco de dados, informar o cliente e sugerir ajuda adicional.\n   - Exemplo:\n     - *\"Não consegui encontrar essa informação no momento. Vou encaminhar para um de nossos atendentes humanos, que entrará em contato com você o mais rápido possível!\"*\n\n---\n\n#### **4. Exemplos de Mensagens**\n\n1. Cliente pergunta: *\"Qual o preço do banho para cachorro de porte médio?\"*\nResposta: *\"O banho para cachorros de porte médio custa R$ 70,00. Gostaria de agendar um horário ou saber mais sobre os serviços?\"*\n\n2. Cliente pergunta: *\"Vocês têm serviço de hospedagem para pets?\"*\nResposta: *\"Sim, oferecemos hospedagem para pets com cuidado 24 horas! O preço para cachorros de porte médio é R$ 150,00 por dia. Precisa de mais informações ou quer reservar?\"*\n\n3. Cliente pergunta: *\"Qual o horário de funcionamento no sábado?\"*\nResposta: *\"Abrimos aos sábados das 09:00 às 14:00. Precisa de ajuda para agendar algum serviço nesse horário?\"*\n\n4. Cliente pergunta: *\"Quais promoções estão disponíveis no momento?\"*\nResposta: *\"Atualmente temos: 10% de desconto em Banho e Tosa para novos clientes, 20% de desconto no pacote de 3 diárias no Hotel para Pets, e check-up grátis ao vacinar seu pet. Gostaria de aproveitar alguma dessas promoções?\"*\n\n5. Cliente pergunta: *\"Vocês fazem adestramento de cães?\"*\nResposta: *\"Sim, temos um serviço de adestramento personalizado. O pacote com 5 aulas custa R$ 300,00. Quer mais informações ou deseja agendar uma aula?\"*\n\n6. Cliente pergunta: *\"Tem ração para gatos?\"*\n   - Resposta: *\"Sim, temos várias opções de ração para gatos! Qual tamanho ou marca você prefere? Vou consultar aqui pra você.\"*\n\n7. Cliente pergunta algo não registrado:\n   - Resposta: *\"Essa informação eu ainda não tenho, mas vou avisar um dos atendentes para que entre em contato com você rapidamente!\"*\n\n---\n"
        }
      },
      "id": "3d0501de-4b6a-404a-8683-68ad3349a3e3",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2300,
        680
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "46807e20-97d3-4619-9379-a325e3921c0e",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        980,
        1440
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "7fa3ce66-daff-4448-9fef-05ea24b6e75c",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1820,
        1460
      ],
      "credentials": {
        "supabaseApi": {
          "id": "k0C20xz6iqH7ezTS",
          "name": "Supabase - Black"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "9df63e15-e206-4e04-85f5-c8e83a066b1c",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2960,
        1300
      ],
      "credentials": {
        "supabaseApi": {
          "id": "k0C20xz6iqH7ezTS",
          "name": "Supabase - Black"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "3fb86ab4-385b-4ddf-9dad-cd5e60779cf9",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1180,
        1440
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 660,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2100,
        540
      ],
      "typeVersion": 1,
      "id": "04ebe216-acc7-4d2a-92d7-62da7ecf0db1",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2940,
        1120
      ],
      "typeVersion": 1,
      "id": "7507cc6d-5a56-4b2b-8e87-09a0d8a12a32",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 1980,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        260,
        1120
      ],
      "typeVersion": 1,
      "id": "7c6fedc6-c6ff-4e85-af3b-cee90443166d",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 380,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1560,
        80
      ],
      "typeVersion": 1,
      "id": "0b13cfbd-7048-4837-8866-0636de032dbc",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# Informações",
        "height": 80,
        "width": 243,
        "color": 7
      },
      "id": "8b308726-8cae-4a67-9976-9d32a2cdf567",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        100
      ]
    },
    {
      "parameters": {
        "content": "## N8N Versão 1.71.1\n## Evolution API 2.2.0",
        "height": 100,
        "width": 283,
        "color": 7
      },
      "id": "47134355-780a-4779-a333-3ea4fa524ce1",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        200
      ]
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta específica > Verificar o tipo de arquivo e realizar conversão > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        1820
      ],
      "typeVersion": 1,
      "id": "c3ec855c-b7ce-453f-86f4-a550bbc82fa4",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "d2e922b9-f7b1-4b16-89a4-60dafec62b17",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        1300
      ]
    },
    {
      "parameters": {
        "content": "## [Grupo de Networking](https://chat.whatsapp.com/EvigcSnVVim11D56QPSjPX)",
        "height": 80,
        "width": 323,
        "color": 7
      },
      "id": "a3087701-9d3a-48ba-b6e7-e144fc46cb74",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        320
      ]
    },
    {
      "parameters": {
        "content": "## [Acesse o canal no Youtube](https://www.youtube.com/@N8NLabz)",
        "height": 80,
        "width": 343,
        "color": 7
      },
      "id": "74515a0d-58bf-438c-a029-71a1c3f218e1",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        420
      ]
    },
    {
      "parameters": {
        "content": "![N8N Labz](https://i.postimg.cc/nzFz2Bzd/N8N-Labz.png)",
        "height": 437,
        "width": 736,
        "color": 3
      },
      "id": "f040c333-0fe0-4477-8fce-26dabd5ba68a",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1960,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "bcd276c9-e90b-4eaf-8aab-cc8cc5ad5653",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2460,
        1320
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 300,
        "width": 660,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2260,
        1120
      ],
      "typeVersion": 1,
      "id": "e3a2c273-bed4-437c-9a39-b8a32cc6c64f",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions."
      },
      "id": "f05f884a-cd1f-407a-9b0a-610fb0d94bf8",
      "name": "busca_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        3040,
        1160
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta quando precisar deletar um evento existente, com base no ID do evento\nsempre use o email do cliente para fazer o cancelamento.",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "divalf@gmail.com",
          "mode": "list",
          "cachedResultName": "divalf@gmail.com"
        },
        "eventId": "={{ $fromAI('id') }}",
        "options": {}
      },
      "id": "68d42ed8-1021-42cf-9247-3b2205d3f06d",
      "name": "detelar_eventos",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2680,
        1160
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para criar o agendamento do cliente, apenas um agendamento por horário, faça com que exista a consulta de horário na tool busca_eventos para não agendar dois clientes no mesmo horario.\nApenas uma e-mail de usuário por horário de atendimento\nEstá proibido agendar mais de uma vez.",
        "calendar": {
          "__rl": true,
          "value": "divalf@gmail.com",
          "mode": "list",
          "cachedResultName": "divalf@gmail.com"
        },
        "start": "= {{ $fromAI('start_time') }}",
        "end": "= {{ $fromAI('end_time') }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI('email_do_cliente') }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI('description') }}",
          "location": "={{ $fromAI('local_evento') }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI('titulo_evento') }}"
        }
      },
      "id": "f82ce6f4-292f-460d-a3f6-78682c81eb63",
      "name": "Criar_evento",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2540,
        1160
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "divalf@gmail.com",
          "mode": "list",
          "cachedResultName": "divalf@gmail.com"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $('Date & Time1').first().json.currentDate }}",
          "timeMax": "={{ (() => {\n  const currentDate = new Date($('Date & Time1').first().json.currentDate); // Converte a string para um objeto Date\n  currentDate.setDate(currentDate.getDate() + 30); // Adiciona 30 dias\n  return currentDate.toISOString(); // Retorna a data em formato ISO\n})() }}",
          "query": "@"
        }
      },
      "id": "185fb4ca-c4cb-4bef-bb1b-4e05dd250097",
      "name": "Get_many",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2420,
        1160
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para buscar os horários disponiveis entre 8h as 18h.\nse a resposta for [empty array], todos os horarios estão livres.\nSe o usuario pergutar sobre seus eventos agendados, busque os eventos marcados a partir do email fornecido pelo usuario.\nJamais informe sobre eventos que estejam com email diferente do fornecido pelo usuario.\nSe retornar sem_eventos informa a agenda livre",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "divalf@gmail.com",
          "mode": "list",
          "cachedResultName": "divalf@gmail.com"
        },
        "limit": 10,
        "options": {
          "timeMin": "={{ $now.format('dd/MM/yyyy') }}",
          "singleEvents": true,
          "orderBy": "startTime",
          "timeZone": {
            "__rl": true,
            "value": "America/Sao_Paulo",
            "mode": "list",
            "cachedResultName": "America/Sao_Paulo"
          }
        }
      },
      "id": "6de2fc5e-b1b6-423e-8630-74a8c9c012f5",
      "name": "buscar_eventos",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2300,
        1160
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solcitiado e também para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Enviado pela ",
          "replyTo": "divalf@gmail.com"
        }
      },
      "id": "681e60e4-f550-4832-8f69-e6407facb1db",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2800,
        1160
      ],
      "webhookId": "a0a0cc26-019f-4e8a-b137-a61c27efe89a",
      "credentials": {
        "gmailOAuth2": {
          "id": "U4fzmAAJisOnJnJI",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.telefone }}",
        "messageData": "={{ $('Variáveis').item.json.mensagem }}",
        "tail": true
      },
      "id": "5bea1ea0-c137-4fb4-af97-e7799dd8ae30",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1140,
        780
      ],
      "credentials": {
        "redis": {
          "id": "PgTYy7QEIKMvg1pV",
          "name": "Redis - paradise"
        }
      }
    },
    {
      "parameters": {
        "amount": 15
      },
      "id": "a938c1b7-da33-4d9c-9a61-0132ad92fc85",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1300,
        780
      ],
      "webhookId": "46245788-c582-4b3a-9ca9-97769757ccad"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Variáveis').item.json.telefone }}",
        "options": {}
      },
      "id": "d9e3ebba-41f9-49bb-984b-c5e6f0b8172c",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1460,
        780
      ],
      "credentials": {
        "redis": {
          "id": "PgTYy7QEIKMvg1pV",
          "name": "Redis - paradise"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Variáveis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "43275a90-2786-4183-931e-c86d28570da8",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1620,
        780
      ]
    },
    {
      "parameters": {},
      "id": "1711f6b1-96fe-4a04-8721-1eb9fe6b050f",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1780,
        860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName.join(', ') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e15de80e-83b5-441d-be60-70a1d2b3093d",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1780,
        680
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Variáveis').item.json.telefone }}"
      },
      "id": "c6e1c2da-dda9-4556-b5b8-04b3a9ea3aed",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1940,
        680
      ],
      "credentials": {
        "redis": {
          "id": "PgTYy7QEIKMvg1pV",
          "name": "Redis - paradise"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "227c6037-d52d-4403-8756-0853b9877777",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        400,
        740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "50919337-8c00-4b8f-b831-056fde2a52ce",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        740
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "dc7b8180-0f47-44a3-b364-2972aec08309",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        400,
        940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1af2c8c8-8fb9-4ddc-b08a-3b5f39754dd4",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "aec4d56e-b202-4ff3-b827-7dba4afee9b4",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        700,
        940
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.telefone }}",
        "messageData": "={{ $('Variáveis').item.json.mensagem }}",
        "tail": true
      },
      "id": "7b7c7393-9fd1-4ead-89a6-8e27b682644d",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        980,
        620
      ],
      "credentials": {
        "redis": {
          "id": "PgTYy7QEIKMvg1pV",
          "name": "Redis - paradise"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.telefone }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "39e88063-1776-455c-88d1-eaecf95d9846",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        980,
        940
      ],
      "credentials": {
        "redis": {
          "id": "PgTYy7QEIKMvg1pV",
          "name": "Redis - paradise"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.telefone }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "9952f73a-2dba-44ff-a24e-052edb20b4fd",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        840,
        840
      ],
      "credentials": {
        "redis": {
          "id": "PgTYy7QEIKMvg1pV",
          "name": "Redis - paradise"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Variáveis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "51f6e6da-be76-422f-8886-2e6e1e64f8bb",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        580
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "ca9f6d12-f4a0-47f8-b146-7eb478007c66",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        560,
        740
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "5b50668a-d64b-4257-bfcd-96aac3b504b5",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        560,
        940
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "paradise",
        "options": {}
      },
      "id": "a60864ae-fa02-4392-8fdc-e76847697ca4",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -940,
        760
      ],
      "webhookId": "71e428f4-3bdc-41e5-8164-cabbff382a39"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "userspet",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -600,
        760
      ],
      "id": "1a64b75b-7b0b-40c7-aab4-d3dc034a2d04",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "k0C20xz6iqH7ezTS",
          "name": "Supabase - Black"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -440,
        760
      ],
      "id": "e72a0921-ce91-4064-a67a-ca32f39d398a",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -260,
        860
      ],
      "id": "0b8ba747-9b8f-4fbf-8c87-fbc3d7b50a43",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "userspet",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionID",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -120,
        860
      ],
      "id": "af27c6bf-9ec4-494e-bacb-c401a8920124",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "k0C20xz6iqH7ezTS",
          "name": "Supabase - Black"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "306295a8-173c-406f-99c8-aebcb03bf930",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2800,
        520
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "13bea9a5-427a-4af6-94e9-b3ce0d0cc6e2",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3120,
        320
      ]
    },
    {
      "parameters": {
        "amount": 3
      },
      "id": "90eda3ff-5946-4f6f-8beb-e414c66126c8",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3780,
        340
      ],
      "webhookId": "8a810ad6-4ecf-4781-aed8-7f2b295770dc"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f10f3244-2f77-450d-aef1-22643070f622",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3280,
        320
      ]
    },
    {
      "parameters": {},
      "id": "b9da8d48-8b72-41b0-9fb1-0eac9ea96224",
      "name": "no.op",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3920,
        340
      ]
    },
    {
      "parameters": {},
      "id": "f2abaa44-4cdb-469c-9b4e-0eacbd233d7a",
      "name": "Replace Me",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3500,
        340
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "ab32cf80-1ece-4f67-9d1a-ff7ba71b26f3",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3020,
        520
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formatação: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "957f4a5d-8e4b-4d83-af4b-a4f33def8b48",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2820,
        320
      ]
    },
    {
      "parameters": {
        "content": "# Mensagem Picotada",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "9dd42162-b57c-4933-bb5b-9bcd4a4a59e6",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1300,
        560
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 1220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        860,
        540
      ],
      "typeVersion": 1,
      "id": "54584c9f-9514-43ec-b7b5-70114ec096fe",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2780,
        180
      ],
      "typeVersion": 1,
      "id": "10a5286c-f77c-4093-a60e-f4ededa1912f",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "5338ff9c-e7b8-4d4d-abfa-8d27ef53e225",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2800,
        200
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        40,
        540
      ],
      "typeVersion": 1,
      "id": "60086c1d-5fb1-4f35-bce8-fe5ecd117e4b",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "259c359a-feee-40f7-acd7-3d4065380e44",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        420,
        560
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 660,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -640,
        540
      ],
      "typeVersion": 1,
      "id": "8162b73b-825d-482d-9ce1-5d18ff8abe42",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Registro de Cliente no Supabase",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "1e3abd91-26fe-48a1-b033-75804dc48cad",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -600,
        560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}{{ $('Webhook').item.json.body.data.message.extendedTextMessage.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "019b3bcd-d7b4-4b89-b920-51c145feddb9",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -780,
        760
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 1300,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2780,
        760
      ],
      "typeVersion": 1,
      "id": "a0fe38e1-a6cf-429d-8e6a-d3f6a900d926",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "# Resposta em Áudio",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "11ca97f3-443f-4410-9718-0764b70307dc",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2920,
        780
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 180,
        "width": 320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -900,
        820
      ],
      "typeVersion": 1,
      "id": "93e21e66-428c-47eb-a635-da0f137f53b6",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "content": "**Integração com Google Drive e Supabase:**\n   - O fluxo monitora pastas específicas no Google Drive para identificar arquivos criados ou atualizados.\n   - Os arquivos são processados (PDF, Excel ou documentos de texto) e o conteúdo extraído é enviado para um banco de dados vetorial (Supabase Vector Store), o que permite buscas rápidas e inteligentes.\n\n**Agente Virtual para Atendimento:**\n   - Um agente virtual (Isis) é configurado para atender clientes de forma amigável e precisa, utilizando um banco de dados como referência.\n   - Há uma configuração detalhada para o tom de voz e o comportamento do agente, garantindo alinhamento com o ambiente acolhedor do pet shop.\n\n**Agendamentos e Integração com Google Calendar:**\n   - O fluxo permite verificar horários disponíveis e criar agendamentos diretamente no Google Calendar.\n   - Regras são implementadas para evitar agendamentos duplicados ou horários conflitantes.\n\n\n",
        "height": 440,
        "width": 440,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        80
      ],
      "typeVersion": 1,
      "id": "6bc8aed0-12a7-4ef8-95c7-12fedc59a619",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "content": "### Estrutura do Fluxo\n- **Entradas e Processamento Inicial:**\n  - O fluxo começa com um webhook que recebe mensagens do WhatsApp. Cada mensagem é analisada e categorizada.\n  - Variáveis como número de telefone e tipo de mensagem são extraídas.\n\n- **Consulta e Processamento de Dados:**\n  - Dependendo do tipo de mensagem, diferentes nós são acionados. Por exemplo:\n    - Para mensagens de texto, o conteúdo é formatado.\n    - Para áudios, há uma transcrição.\n    - Para imagens, é feita uma análise do conteúdo.\n\n- **Interação com Ferramentas:**\n  - Supabase é usado para armazenar dados do cliente, enquanto o Redis gerencia temporariamente informações.\n  - Google Calendar é usado para agendamentos, com verificações automáticas de disponibilidade.\n\n- **Saída e Notificações:**\n  - Respostas formatadas são enviadas de volta ao cliente via Evolution API.",
        "height": 440,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        840,
        80
      ],
      "typeVersion": 1,
      "id": "0f8330e4-d12c-4ab9-ad6e-4e4b55a152be",
      "name": "Sticky Note28"
    },
    {
      "parameters": {
        "content": "**Automatização de Respostas:**\n   - Mensagens recebidas são classificadas com base no tipo (texto, áudio ou imagem).\n   - Dependendo do tipo, as mensagens passam por processamento, como transcrição de áudio ou análise de imagem, antes de serem armazenadas ou usadas.\n\n**Redis para Gerenciamento Temporário de Dados:**\n   - Redis é usado para armazenar mensagens ou dados temporários, garantindo que as informações sejam manipuladas de forma eficiente.\n\n**Uso da Evolution API para Respostas no WhatsApp:**\n   - Integração com a Evolution API permite enviar respostas para os clientes diretamente no WhatsApp.\n   - Mensagens são divididas em partes lógicas para melhor compreensão e envio.\n",
        "height": 440,
        "width": 380,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        80
      ],
      "typeVersion": 1,
      "id": "974c0d12-3b5b-4f25-a2d2-3052ca9ddf11",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "content": "## &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Funções do Fluxo",
        "height": 80,
        "width": 820,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "91060fde-1ae8-4074-93ac-d4c944456e80",
      "name": "Sticky Note30"
    },
    {
      "parameters": {
        "jsCode": "// Obtém o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que há dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' não foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3040,
        900
      ],
      "id": "6aaea3dd-01a0-49f3-94d7-3c9d79a17646",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2160,
        860
      ],
      "id": "012360b1-89c4-46dd-8a35-42202564dba6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/speech",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "tts-1"
            },
            {
              "name": "input",
              "value": "={{ $json.textoSemQuebrasNemEmojis }}"
            },
            {
              "name": "voice",
              "value": "echo"
            }
          ]
        },
        "options": {}
      },
      "id": "c882b3ce-629c-4786-8700-e3932dff3ca4",
      "name": "Gera Áudio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3260,
        900
      ],
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "destinationKey": "base64",
        "options": {}
      },
      "id": "1fda5196-9861-4b00-a286-99eb69ff9ec4",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3480,
        900
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "Deebs",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "media": "={{ $json.base64 }}",
        "options_message": {
          "delay": 200
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3700,
        900
      ],
      "id": "607007dd-f93d-4e81-a1da-b3fe8343ba14",
      "name": "ENVIAR_AUDIO",
      "credentials": {
        "evolutionApi": {
          "id": "H4xiXkzcZmkapfB3",
          "name": "Evolution - Paradise"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Deebs",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3640,
        340
      ],
      "id": "7e81d7cd-a4be-49de-b929-1bab72c3dcdf",
      "name": "ENVIAR_TEXTO",
      "credentials": {
        "evolutionApi": {
          "id": "H4xiXkzcZmkapfB3",
          "name": "Evolution - Paradise"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "f910ae36-380d-415e-b71e-90078ca223e6",
      "name": "TIPO_MENSAGEM",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        60,
        720
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Variáveis').item.json.telefone }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2320,
        860
      ],
      "id": "d608fde0-bbd3-4c22-a0e8-212cb51c9699",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "uoqPtvjJ9DxcwCS2",
          "name": "Postgres - Paradise"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM n8n_chat_histories;",
        "options": {}
      },
      "id": "497baf68-1965-4a9d-9763-f33c554d61af",
      "name": "DELTAR_MEMÓRIA",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2120,
        560
      ],
      "credentials": {
        "postgres": {
          "id": "uoqPtvjJ9DxcwCS2",
          "name": "Postgres - Paradise"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "c3b46acc-853e-40e9-bd7f-850f1ee53a38",
      "name": "TIPO_SAÍDA",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2620,
        680
      ]
    }
  ],
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "busca_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "busca_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG AI Agent": {
      "main": [
        [
          {
            "node": "TIPO_SAÍDA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "busca_documentos": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "detelar_eventos": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Criar_evento": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get_many": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "buscar_eventos": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "TIPO_MENSAGEM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "TIPO_MENSAGEM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "no.op",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "no.op": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Gera Áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gera Áudio": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio-Base64-Extract from File": {
      "main": [
        [
          {
            "node": "ENVIAR_AUDIO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "ENVIAR_TEXTO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ENVIAR_TEXTO": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TIPO_MENSAGEM": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "TIPO_SAÍDA": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-03-27T01:05:21Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-03-27T01:05:21Z"
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "dinastia-n8n-editor.lfigsi.easypanel.host",
            "user-agent": "axios/1.7.9",
            "content-length": "986",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "dinastia-n8n-editor.lfigsi.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "60db43949995",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Deebs",
            "data": {
              "key": {
                "remoteJid": "5511985401987@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB0E87081D18D6FAF49DB"
              },
              "pushName": "Dival S Filho 😎",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Boa Noite!!!",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "OG65I6BDI4V+0g==",
                    "senderTimestamp": "1742595366",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "ey9k2dHOiS12Wg==",
                    "recipientTimestamp": "1742443804"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "zARK59RyCpDJC7+Ye4v1F3GwJMpRdb73WkiFBil4cYQ="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1742955495,
              "instanceId": "8e60633a-43c9-4c90-9032-3bd6b9713741",
              "source": "web"
            },
            "destination": "https://dinastia-n8n-editor.lfigsi.easypanel.host/webhook-test/paradise",
            "date_time": "2025-03-25T23:18:15.612Z",
            "sender": "5511932081209@s.whatsapp.net",
            "server_url": "https://dinastia-evolution.lfigsi.easypanel.host",
            "apikey": "46A8DD04E743-41B1-9AFD-78D9B9DB137B"
          },
          "webhookUrl": "https://dinastia-n8n-webhook.lfigsi.easypanel.host/webhook-test/paradise",
          "executionMode": "test"
        }
      }
    ]
  },
  "versionId": "76fb01f9-d73f-4011-9c85-b6a9e11cb529",
  "triggerCount": 3,
  "tags": [
    {
      "createdAt": "2025-03-23T22:52:33.937Z",
      "updatedAt": "2025-03-23T22:52:33.937Z",
      "id": "dmOn045yuVeVYKba",
      "name": "labz"
    }
  ]
}