{
  "createdAt": "2025-01-23T02:56:09.085Z",
  "updatedAt": "2025-01-24T02:35:03.780Z",
  "id": "lVrJ36R44eJwurL3",
  "name": "Multi Agente Ofir - V1",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "mult-agent-ofir",
        "options": {}
      },
      "id": "22655981-2a8d-4788-a4a9-1e9d84244693",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2140,
        80
      ],
      "webhookId": "81dd8066-f3ed-462b-a538-3bad57450e37"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a2d7d0bb-f307-46cd-9a7e-6784493f0444",
              "name": "numero",
              "value": "={{ $json.body.data?.key?.remoteJid ?? $json.body.numero}}",
              "type": "string"
            },
            {
              "id": "50ac7a75-bfc7-4075-9245-ee2c94739474",
              "name": "evolutionApiKey",
              "value": "1BEA861EBC63-4328-A016-843243A247FC",
              "type": "string"
            },
            {
              "id": "d910cf27-2143-4aad-9838-72f671cca83a",
              "name": "pushName",
              "value": "={{ $('Webhook').item?.json?.body?.data?.pushName ?? \"Novo lead\" }}",
              "type": "string"
            },
            {
              "id": "c1bcd8a2-8818-4b95-a1cc-e7eb3d8aa48d",
              "name": "mensagem",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1880,
        80
      ],
      "id": "05d2711c-7629-4fa9-85c2-18aa672dd7c3",
      "name": "config"
    },
    {
      "parameters": {
        "content": "## Configuração",
        "height": 300,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1980,
        0
      ],
      "id": "48252900-474e-4dce-9b06-6c496f215e7f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "17b6fa1c-f4ea-4c75-9c9e-1a43900dbc58",
              "leftValue": "={{ $('Webhook').item.json.body.apikey }}",
              "rightValue": "={{ $json.evolutionApiKey }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "70c82c3b-7619-4b50-899f-17931323d19d",
              "leftValue": "={{ $('Webhook').item.json.body.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f1e6cc49-95b4-476f-8bdd-9d45b8c51e7b",
      "name": "auth",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1620,
        80
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "ao_clientes",
          "mode": "list",
          "cachedResultName": "ao_clientes"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "numero",
              "value": "={{ $('criar_cliente').item.json.body.numero }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1840,
        1300
      ],
      "id": "782c9f15-5203-4e56-b44e-860bdf85d415",
      "name": "Postgres",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1581cf30-cf13-4576-85f3-596fde5e0a5b",
              "name": "clienteNumero",
              "value": "={{ $json.numero }}",
              "type": "string"
            },
            {
              "id": "df687a37-1dce-4f4f-9c0e-249f6094f51b",
              "name": "clienteData",
              "value": "={{ $json.data }}",
              "type": "object"
            },
            {
              "id": "5932652e-f969-4e57-8848-d53136184603",
              "name": "clienteDepartamento",
              "value": "={{ $json.departamento }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1460,
        1300
      ],
      "id": "365dfe3a-173a-4049-b0b5-90e69ced01c2",
      "name": "cliente"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f7a93cbd-d1d5-4b67-ab6a-83b6cec5ffb7",
              "leftValue": "={{ $json.clienteNumero }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        1480
      ],
      "id": "7cfe2f7d-540b-41f4-b904-6242c738ae10",
      "name": "cliente_existente"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5ebd8843-19a7-4147-8ccd-fcb0e849f79c",
              "name": "clienteNumero",
              "value": "={{ $json.clienteNumero }}",
              "type": "string"
            },
            {
              "id": "9ab6c0a4-d5b4-493a-af98-8769b7882df4",
              "name": "clienteData",
              "value": "={{ $json.clienteData }}",
              "type": "object"
            },
            {
              "id": "3d17f8e5-f803-482d-9135-cb6a26741033",
              "name": "clienteDepartamento",
              "value": "={{ $json.clienteDepartamento }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -920,
        1300
      ],
      "id": "4d39b458-7f98-449f-9e7b-9ffd74457653",
      "name": "cliente_atualizado"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "ao_clientes",
          "mode": "list",
          "cachedResultName": "ao_clientes"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "numero": "={{ $('criar_cliente').item.json.body.numero }}",
            "departamento": "comercial",
            "data": "{}"
          },
          "matchingColumns": [
            "numero"
          ],
          "schema": [
            {
              "id": "numero",
              "displayName": "numero",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "departamento",
              "displayName": "departamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1680,
        1500
      ],
      "id": "7f19a946-1321-4881-80ef-cf9a4b3b96c4",
      "name": "novo_cliente",
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"clienteNumero\": \"{{ $json.clienteNumero }}\",\n  \"clienteData\": {{ JSON.stringify($json.clienteData) }},\n  \"clienteDepartamento\": \"{{ $json.clienteDepartamento }}\",\n  \"departamentos\": {{ JSON.stringify($json.departamentos) }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -680,
        1540
      ],
      "id": "845a0f14-7866-4457-86e6-376475c36218",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "numero",
              "value": "={{ $json.numero }}"
            },
            {
              "name": "nome",
              "value": "={{ $json.pushName }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1080,
        200
      ],
      "id": "a1e8722a-c6d0-4eb0-9dec-e866a10ccbaa",
      "name": "puxar_cliente",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gerenciar tabela ao_clientes",
        "height": 80,
        "width": 1760,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2140,
        1180
      ],
      "id": "8afc9954-334e-4c18-90a5-87fbb0f86847",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b3b35544-ab83-48d3-9615-140c0fb837ec",
                    "leftValue": "={{ $runIndex }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ERRO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f5575cab-6d32-4e51-aeeb-4d7a37587ce8",
                    "leftValue": "={{ $json.clienteDepartamento }}",
                    "rightValue": "comercial",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "comercial"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "88ceb60a-5aef-461c-b7de-bd1e0b375a31",
                    "leftValue": "={{ $json.clienteDepartamento }}",
                    "rightValue": "secretaria",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "secretaria"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7e082338-f421-4bf8-9211-edd31b224248",
                    "leftValue": "={{ $json.clienteDepartamento }}",
                    "rightValue": "humano",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "humano"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -700,
        180
      ],
      "id": "f36ca298-6c83-4c19-b21d-ca3b2afdfebe",
      "name": "departamento"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2162b82e-a65b-4155-b504-149b5531157e",
              "name": "clienteNumero",
              "value": "={{ $('mensagem').item.json.clienteNumero }}",
              "type": "string"
            },
            {
              "id": "35deac04-51b5-4c72-9a5b-45eb00307d69",
              "name": "clienteData",
              "value": "={{ $('mensagem').item.json.clienteData }}",
              "type": "object"
            },
            {
              "id": "808a9de6-4181-4985-8e43-09fe9882b07e",
              "name": "clienteDepartamento",
              "value": "={{ $json.departamento }}",
              "type": "string"
            },
            {
              "id": "23c7cd7f-330a-4de9-a5b1-57b2f370962c",
              "name": "mensagem",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        240
      ],
      "id": "9f0fec9d-e318-4904-9285-4a9b1159c70b",
      "name": "agente_retorno"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9726544b-7774-43c6-b110-574e30e859be",
              "leftValue": "={{ $json.clienteDepartamento }}",
              "rightValue": "={{ $('departamento').item.json.clienteDepartamento }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        360,
        520
      ],
      "id": "f8119c7f-0310-43c4-ae87-622a662ddb55",
      "name": "transferir_cliente",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "## CLICK UP - Integração",
        "height": 80,
        "width": 1920,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2120,
        2400
      ],
      "id": "0004bf16-521e-41dd-aa06-01c6ab8ef33a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agente-ofir/v1/clickup",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2100,
        2680
      ],
      "id": "836457c2-ce84-4112-9b79-67094033829f",
      "name": "criar_ou_atualizar_lead",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "numero",
              "value": "={{ $('criar_ou_atualizar_lead').item.json.body.numero }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1500,
        2680
      ],
      "id": "a564cfaf-44c8-4aec-9229-88e64f2d4fb1",
      "name": "puxar_cliente1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('criar_ou_atualizar_lead').item.json.body.acao }}",
                    "rightValue": "CRIAR_LEAD",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CRIAR_LEAD"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4009ce8a-a78c-4f83-9862-e86295c595ff",
                    "leftValue": "={{ $('criar_ou_atualizar_lead').item.json.body.acao }}",
                    "rightValue": "ADICIONAR_COMENTARIO",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ADICIONAR_COMENTARIO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2854cd1c-b1c6-4851-97f7-fcc092066f9b",
                    "leftValue": "={{ $('criar_ou_atualizar_lead').item.json.body.acao }}",
                    "rightValue": "ATUALIZAR_CONSULTA_DATA",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ATUALIZAR_CONSULTA_DATA"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1300,
        2680
      ],
      "id": "2e06231b-2056-48bc-a5a2-939e466d6ab3",
      "name": "crm_acao"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agente-ofir/v1/cliente",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2120,
        1300
      ],
      "id": "9350355e-8c39-439e-a1fb-29c90e0bcf5e",
      "name": "criar_cliente",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6"
    },
    {
      "parameters": {
        "httpMethod": "PATCH",
        "path": "agente-ofir/v1/cliente",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2120,
        1820
      ],
      "id": "3800b58a-6c96-4b8b-b960-8ba9198687ea",
      "name": "atualizar_cliente",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "numero",
              "value": "={{ $json.numero }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1700,
        1820
      ],
      "id": "deb11e09-dc55-4a8b-999b-6b69b6b6202d",
      "name": "puxar_cliente2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO ao_clientes (numero, data, departamento)\nVALUES ('{{ $('tratamento5').item.json.numero }}', '{{ $('tratamento5').item.json.data }}'::jsonb, '{{ $('tratamento5').item.json.departamento }}')\nON CONFLICT (numero) \nDO UPDATE SET \n    data = ao_clientes.data || EXCLUDED.data,\n    departamento = EXCLUDED.departamento,\n    updated_at = CURRENT_TIMESTAMP;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1500,
        1820
      ],
      "id": "4034e688-ee96-496d-810a-267c9832da31",
      "name": "query_atualizar_data",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={ \"sucesso\": {{ $json.success }} }",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -1300,
        1820
      ],
      "id": "171e4e91-657e-440c-9bd5-baffd95a7dae",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $('criar_ou_atualizar_lead').item.json.body.numero }}\",\n  \"data\": {\n    \"crmId\": \"{{ $json.id }}\"\n  },\n  \"departamento\": \"{{ $('puxar_cliente1').item.json.clienteDepartamento }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -780,
        2500
      ],
      "id": "78bf9826-35d2-411d-bade-643fb04003a0",
      "name": "atualizar_cliente1"
    },
    {
      "parameters": {
        "team": "9012646112",
        "space": "90122567961",
        "folderless": true,
        "list": "901206791497",
        "name": "={{ $('criar_ou_atualizar_lead').item.json.body.data.nome }}",
        "additionalFields": {
          "assignees": [
            81321313
          ],
          "customFieldsJson": "=[ {\"id\": \"{{ $('config1').item.json.dinastiaClienteId }}\", \"value\": \"{{ $('criar_ou_atualizar_lead').item.json.body.numero }}\"} ]",
          "content": "=Telefone: {{ $('criar_ou_atualizar_lead').item.json.body.data.telefone }}",
          "startDate": "={{ $now.toFormat(\"yyyy-MM-dd HH:mm\") }}",
          "startDateTime": "={{ true }}",
          "status": "novo lead"
        }
      },
      "id": "9e8664fb-b165-49f5-b967-8058947be9fc",
      "name": "criar_lead_crm",
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [
        -1000,
        2500
      ]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $json.clienteNumero }}\",\n  \"data\": {\n    \"departamentoOrigem\": \"{{ $('puxar_cliente').item.json.clienteDepartamento }}\",\n    \"departamentoDestino\": \"{{ $json.clienteDepartamento }}\"\n  },\n  \"departamento\": \"{{ $json.clienteDepartamento }}\",\n  \"outros\": { \n    \"mensagemAgente\": \"{{ $json.mensagem }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -400,
        500
      ],
      "id": "230438f5-4f45-4a08-812d-06af800178cb",
      "name": "atualizar_cliente2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f457599-2e6d-46be-bde4-f922cc121bfa",
              "name": "clienteNumero",
              "value": "={{ $json.clienteNumero }}",
              "type": "string"
            },
            {
              "id": "9c034464-d953-4bd1-a622-e48a00528547",
              "name": "clienteData",
              "value": "={{ $json.clienteData }}",
              "type": "object"
            },
            {
              "id": "a4d2d45d-eb88-4ad8-8543-67973d515dab",
              "name": "clienteDepartamento",
              "value": "={{ $json.clienteDepartamento }}",
              "type": "string"
            },
            {
              "id": "9b795ede-9d27-43a0-a0aa-dafa04207222",
              "name": "mensagem",
              "value": "={{ $('tratamento').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -900,
        200
      ],
      "id": "795935bd-538a-4b39-9f79-744dea5a296f",
      "name": "mensagem"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "784da313-0ddc-40d0-9422-22182af28f25",
              "name": "clienteNumero",
              "value": "={{ $('transferir_cliente').item.json.clienteNumero }}",
              "type": "string"
            },
            {
              "id": "dee352ee-f699-41ab-8291-98e9ec8b2b1c",
              "name": "clienteData",
              "value": "={{ $('transferir_cliente').item.json.clienteData }}",
              "type": "object"
            },
            {
              "id": "f6a08b10-b072-4d11-b4fb-dfc91ac4c7da",
              "name": "clienteDepartamento",
              "value": "={{ $('transferir_cliente').item.json.clienteDepartamento }}",
              "type": "string"
            },
            {
              "id": "36509cde-afaa-413a-b40f-bbb531375545",
              "name": "mensagem",
              "value": "={{ $('transferir_cliente').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -180,
        500
      ],
      "id": "f9f52262-6afd-4f18-a1f7-feb750694098",
      "name": "tratamento_cliente"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/clickup",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $('criar_cliente').item.json.body.numero }}\",\n  \"acao\": \"CRIAR_LEAD\",\n  \"data\": {\n    \"nome\": \"{{ $('criar_cliente').item.json.body.nome ?? \"Novo lead\" }}\",\n    \"telefone\": \"{{ $('criar_cliente').item.json.body.numero.split('@')[0] }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1460,
        1500
      ],
      "id": "d2bc5dd1-9191-4953-ac45-566552dc6351",
      "name": "criar_lead_request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"sucesso\": true\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -400,
        2680
      ],
      "id": "8833a259-f070-4059-ac85-a91400089143",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a2d7d0bb-f307-46cd-9a7e-6784493f0444",
              "name": "dinastiaClienteId",
              "value": "=80103ecd-c9c4-4f6d-a9d9-6b0737bded09",
              "type": "string"
            },
            {
              "id": "b26b7681-6ebe-420f-853c-562f5aa44117",
              "name": "consultaDataId",
              "value": "d57547f1-1a9d-4b76-99c8-37505785c2df",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1800,
        2680
      ],
      "id": "70519ce9-b24b-4041-8829-1da23ede6171",
      "name": "config1"
    },
    {
      "parameters": {
        "content": "## Configuração",
        "height": 300,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1900,
        2580
      ],
      "id": "fe8c41c6-857d-4987-aa27-3745a1a42b9d",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agente-ofir/v1/clickup",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2100,
        2880
      ],
      "id": "0736225c-51e5-44b8-b854-619ada24013f",
      "name": "criar_ou_atualizar_lead1",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "comment",
        "commentOn": "task",
        "id": "={{ $json.clienteData.crmId }}",
        "commentText": "=IA: {{ $('criar_ou_atualizar_lead').item.json.body.data.comentario }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [
        -1000,
        2680
      ],
      "id": "1046d4a3-f1dd-43e5-9b0c-2228dcc0b814",
      "name": "adicionar_comentario_crm"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b851e14f-8413-494b-b23d-7ad38bcad1bd",
              "leftValue": "={{ $('puxar_cliente2').item.json.clienteDepartamento }}",
              "rightValue": "={{ $('atualizar_cliente').item.json.body.departamento }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1100,
        1820
      ],
      "id": "2b876f6f-8d47-4ba1-b4c1-a0c6f61d6f30",
      "name": "foi_transferido"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/clickup",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $('puxar_cliente2').item.json.clienteNumero }}\",\n  \"acao\": \"ADICIONAR_COMENTARIO\",\n  \"data\": {\n    \"comentario\": \"{{ $json.comentario }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1900,
        2040
      ],
      "id": "8fa24aea-2ed5-431b-9b44-20acadde621f",
      "name": "adicionar_comentario_request",
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-globals.globalConstants",
      "typeVersion": 1,
      "position": [
        -680,
        1300
      ],
      "id": "9cc39985-3ebc-4aa7-9a4a-a163f0cf4c3a",
      "name": "departamentos",
      "credentials": {}
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const { departamentos, ...rest } = item.json;\n  const departamentosArray = [];\n\n  Object.entries(item.json.departamentos).forEach(([key, value]) => {\n    departamentosArray.push({\n      departamento: key,\n      regras: value\n    });\n  });\n\n  item.json = { departamentos: departamentosArray, ...rest }\n  \n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        1540
      ],
      "id": "866b41f5-5edf-4446-9406-007af8d7febe",
      "name": "departamentos_tratamento"
    },
    {
      "parameters": {
        "content": "## Agente IA: Comercial",
        "height": 80,
        "width": 1200,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        1180
      ],
      "id": "be238d2f-3645-4aa0-9a32-661e8013d5f1",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "numero",
              "value": "={{ $json.body.numero }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        1300
      ],
      "id": "0022b754-a0b0-4c8b-af29-a17d3139f4e6",
      "name": "puxar_cliente4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<mensagem>{{ $('comercial_wh').item.json.body.mensagem }}</mensagem>",
        "options": {
          "systemMessage": "=Departamento atual: <departamento>{{ $json.clienteDepartamento }}</departamento>\n\n<departamentos>\n {{ $json.departamentos.map(item => `\n  <departamento_descricao>\n   <departamento>${item.departamento}</departamento>\n   <regra_de_transferencia>\n    ${item.regras}\n   </regra_de_transferencia>\n </departamento_descricao>\n`)  }}\n</departamentos>\n\n<contexto_sobre_odonotoclinic>\nHá quanto tempo a Odontoclinic Londrina está em atividade?\nResposta: A Odontoclinic Londrina está em atividade há mais de oito anos, oferecendo tecnologia e excelência em odontologia.\n\nQual é o grande diferencial da clínica para pacientes diabéticos e hipertensos?\nResposta: A Odontoclinic Londrina é a primeira clínica especializada em implantes dentários para diabéticos e hipertensos.\n\nQuais são os tratamentos oferecidos pela Odontoclinic Londrina?\nResposta: Os tratamentos incluem:\n\nOrtodontia\nAlinhadores\nLentes de contato dental\nToxina botulínica\nClareamento\nPróteses\nTratamento de canal\nExtração de siso\nPediatria\nRestaurações\nClínico geral\n\nQual é o benefício dos alinhadores em comparação aos aparelhos convencionais?\nResposta: Os alinhadores são práticos, rápidos, imperceptíveis e proporcionam um tratamento 25% mais rápido que os aparelhos convencionais.\n\nA extração de dentes do siso é dolorida na clínica?\nResposta: Não, a clínica oferece um protocolo indolor e diferenciado para a extração dos dentes do siso.\n\nComo a Odontoclinic trata as crianças?\nResposta: A clínica tem uma dentista exclusiva e especializada em pediatria, focada em transmitir confiança e tranquilidade às crianças, evitando traumas.\n\nQuem são as responsáveis pela Odontoclinic Londrina?\nResposta: As responsáveis são as irmãs Dra. Karine Schell e Dra. Karen Schell, empresárias, cristãs e mães que fundaram a clínica em 2015.\n\nQual é a experiência da Dra. Karine Schell?\nResposta: Dra. Karine Schell é Mestre e Especialista em Endodontia, com 17 anos de experiência e mais de 13.000 tratamentos de canal finalizados.\n\nQual é a especialidade da Dra. Karen Schell?\nResposta: Dra. Karen Schell é Especialista em Ortodontia, com 11 anos de experiência e mais de 3.000 tratamentos ortodônticos concluídos.\n\nOnde está localizada a Odontoclinic Londrina?\nResposta: A clínica está localizada na Rua Mato Grosso, 763 – Centro, Londrina – PR, e oferece estacionamento na Rua Mato Grosso, 717.\n\nComo entrar em contato para agendar uma consulta?\nResposta: É possível agendar pelo telefone (43) 3321-0025, pelo WhatsApp (43) 98813-7091 ou diretamente na clínica.\n\nQual é a missão da Odontoclinic Londrina?\nResposta: A missão da clínica é oferecer o melhor da odontologia com especialistas, tecnologia de ponta e materiais de alta qualidade, sempre mantendo valores de ambiente seguro, honestidade e ética.\n\nQual é o lema da Odontoclinic Londrina?\nResposta: “Sorria, a felicidade pertence a você.”\n\nQual é a visão da clínica em relação às restaurações dentárias?\nResposta: A clínica considera as restaurações dentárias como um aliado na prevenção de doenças graves, além de restaurar a qualidade de vida.\n\nQual é o foco no tratamento de canal da clínica?\nResposta: O tratamento de canal é realizado com conforto e tecnologia, sendo garantido que o procedimento na clínica não dói.\n\nO que diferencia o tratamento ortodôntico na Odontoclinic?\nResposta: A clínica tem expertise em oferecer tratamentos rápidos e eficientes, sem enrolação, utilizando os melhores aparelhos ortodônticos.\n\nQuais são os benefícios dos alinhadores oferecidos?\nResposta: Os alinhadores são práticos, rápidos, imperceptíveis e permitem um tratamento 25% mais rápido do que aparelhos convencionais.\n\nO que são lentes de contato dental e quais as vantagens?\nResposta: As lentes de contato dental garantem durabilidade e utilizam porcelana de alta qualidade para realçar sua melhor versão estética.\n\nPara quais fins a toxina botulínica é utilizada?\nResposta: A toxina botulínica é utilizada tanto para fins estéticos quanto para tratamentos como o de bruxismo, melhorando a qualidade de vida.\n\nPor que investir em clareamento dentário?\nResposta: O clareamento dentário é essencial para manter um sorriso impactante, considerado um dos principais acessórios e cartões de visita.\n\nComo as próteses dentárias podem melhorar a vida do paciente?\nResposta: As próteses fixas eliminam desconfortos, devolvendo autoconfiança para sorrir e mastigar sem medo.\n\nO tratamento de canal na clínica é doloroso?\nResposta: Não, a Odontoclinic proporciona conforto e tecnologia de ponta para garantir que o tratamento de canal seja indolor.\n\nA extração dos dentes do siso é tranquila?\nResposta: Sim, a clínica utiliza um protocolo diferenciado que garante uma extração de siso indolor e tranquila.\n\nComo a Odontoclinic atende as crianças?\nResposta: A clínica conta com uma dentista especializada em pediatria, garantindo um atendimento humanizado que transmite confiança e evita traumas.\n\nPor que as restaurações dentárias são importantes?\nResposta: As restaurações previnem doenças graves e também restauram a qualidade de vida dos pacientes, indo além da estética.\n\nQuais serviços são oferecidos pelo clínico geral?\nResposta: O clínico geral da Odontoclinic oferece protocolos personalizados para atender qualquer necessidade odontológica.\n</contexto_sobre_odontoclinic>\n\n<servicos>\n  <servico>\n    <nome>Ortodontia</nome>\n    <valor>R$ 350,00/mês (média de 24-36 meses)</valor>\n  </servico>\n  <servico>\n    <nome>Alinhadores</nome>\n    <valor>R$ 12.000,00 (tratamento completo)</valor>\n  </servico>\n  <servico>\n    <nome>Lentes de contato dental</nome>\n    <valor>R$ 2.500,00 (por dente)</valor>\n  </servico>\n  <servico>\n    <nome>Toxina botulínica</nome>\n    <valor>R$ 800,00 (por sessão)</valor>\n  </servico>\n  <servico>\n    <nome>Clareamento</nome>\n    <valor>R$ 900,00 (consultório + caseiro)</valor>\n  </servico>\n  <servico>\n    <nome>Próteses</nome>\n    <valor>R$ 2.000,00 (por elemento)</valor>\n  </servico>\n  <servico>\n    <nome>Tratamento de canal</nome>\n    <valor>R$ 1.200,00 (por dente)</valor>\n  </servico>\n  <servico>\n    <nome>Extração de siso</nome>\n    <valor>R$ 500,00 (por dente)</valor>\n  </servico>\n  <servico>\n    <nome>Restaurações</nome>\n    <valor>R$ 200,00 (por dente)</valor>\n  </servico>\n</servicos>\n\nVocê é a Jurema, integrante da equipe comercial da OdontoClinic Londrina. Você deve manter um tom amigável e profissional em todas as interações.\n\nO seu objetivo é tirar as dúvidas do cliente respondendo sobre produtos e serviço em <contexto_sobre_odontoclinic></contexto_sobre_odontoclinic> e <servicos></servicos>, identificar qual o serviço o cliente tem, atualizar o cadastro do cliente com o serviço identificado e apenas após a atualização do cadastro, então indicar o cliente para uma consulta gratuita.\n\nInicie a conversa de uma forma amigavel, pergunte sobre quais procedimentos baseado na lista de <servicos> o cliente teria interesse. \n\nUma vez identificado o interese, sem notificar o cliente, use a tool \"atualizar_interesse\" e passe o <nome> do <servico> identificado.\n\nApenas após a identificação do <servico> e atualizado, então faça uma sugestão para o cliente agendar uma consulta gratuita.\n\nAssim que identificar que o cliente deseja realizar uma consulta, transfira para o departamento secretaria.\n\nUse a calculadora sempre que precisar calcular os <valor> descritos no <servico>. A calculadora deve ser usada apenas para operações com INTEGERS\n\nSempre termine com uma pergunta aberta para criar maior engajamento.\n\nREGRAS PRINCIPAIS:\n\nMantenha respostas curtas e objetivas.\nSeja sempre cordial e prestativa.\nVocê deve avaliar a mensagem do cliente e decidir entre transferir ou responder diretamente.\n\nResponda apenas utlizando informações presentes em <contexto_sobre_odontoclinic></contexto_sobre_odontoclinic> e <servicos></servicos>.\n\nCaso não houver nenhuma informação presente em <contexto_sobre_odontoclinic></contexto_sobre_odontoclinic> e <servicos></servicos>, diga que irá solicitar uma ajuda de um outro colega seu e transfira para o departamente  \"humano\".\n\nPROCESSO DE DECISÃO:\n\nIdentifique a necessidade na mensagem\nConsulte as <regra_de_transferencia> \n\nEscolha entre as duas ações possíveis:\n\nApenas responder ao cliente com uma <mensagem>\n\nOu transferir o cliente de departamento e com uma <mensagem> para o departamento ao qual o cliente será transferido.\n\nNão informe ao cliente sobre a transferência.\n\nQuando houver uma <mensagemHumano></mensagemHumano> dentro de <mensagem></mensagem> responda o que estiver na <mensagemHumano></mensagemHumano> e continue no <departamento>{{ $json.clienteDepartamento }}</departamento>, não é para transferir o cliente para o departamento humano neste caso. Isto significa que um humano, responsável por este serviço respondeu ao cliente.\n\n\nResponda apenas usando o formato em JSON, sem aspas. Apenas o JSON.\n\n<output_schema>\n{ \n  \"mensagem\": STRING, \n  \"departamento\": STRING\n}\n</output_schema>\n\nCertifique-se de que na mensagem final ela está usando o formato descrito em <output_schema>.\n\n<exemplos>\n  <exemplo>\n  Human: Ola, eu gostaria de saber se voces possuem serviço para clareamento dental?\n  AI: { \"mensagem\": \"Olá! Aqui é Claudinéia da OdontoClinic Londrina. Sim, oferecemos serviços de clareamento dental. O clareamento é um dos grandes responsáveis pelo impacto de um belo sorriso. Você tem cuidado do seu? Estamos aqui para ajudar!\", \"departamento\": \"comercial\" }\n  </exemlo>\n<exemplo>\n  Human: Ola, eu gostaria de saber se voces possuem serviço para clareamento dental?\n  AI: { \"mensagem\": \"Olá! Aqui é Claudinéia da OdontoClinic Londrina. Sim, oferecemos serviços de clareamento dental. O clareamento é um dos grandes responsáveis pelo impacto de um belo sorriso. Você tem cuidado do seu? Estamos aqui para ajudar!\", \"departamento\": \"comercial\" }\n  Human: Eu tenho um problema bem específico no meu dente, acho que irá precisar de uma cirurgia avançada e aplicada com brocas de ouro. Como posso fazer?\n  AI: { \"mensagem\": \"Cliente com um problema específico, interessado em uma cirurgia dental. Informou que precisaria de brocas de ouro.\", \"departamento\": \"humano\" }\n  </exemlo>\n<exemplo>\n  Departamento atual: <departamento>teste</departamento>\n  Human: <mensagemHumano>Voce precisa de uma ajuda espeecializada</mensagemHumano>\n  AI: { \"mensagem\": \"Voce precisa de uma ajuda espeecializada\": \"teste\" }\n  </exemlo>\n<exemplos>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        540,
        1300
      ],
      "id": "01e4a206-e000-4f9b-a657-b98a6d20bccc",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        400,
        1500
      ],
      "id": "547046c7-b8ce-476d-a592-7837f84ceb13",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.clienteNumero }}",
        "tableName": "ao_comercial_chat"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        560,
        1500
      ],
      "id": "eac188b6-06fb-42a8-8b3f-cde367952b75",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agente-ofir/v1/comercial",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        100,
        1300
      ],
      "id": "45c3edb9-773d-4a81-a29f-05e34d1cc3cc",
      "name": "comercial_wh",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/comercial",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $json.clienteNumero }}\",\n  \"mensagem\": \"{{ $json.mensagem }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        -140
      ],
      "id": "41f13c64-21f5-43ac-858c-a012df191048",
      "name": "ia_comercial",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "81ec2d50-b144-42d3-a071-1b0857369727",
              "leftValue": "={{ $('atualizar_cliente').item.json.body.departamento }}",
              "rightValue": "humano",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1700,
        2040
      ],
      "id": "4e818b34-ea31-4e52-bb98-b5c118b464cd",
      "name": "notificar_quando_for_humano"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-globals.globalConstants",
      "typeVersion": 1,
      "position": [
        -1500,
        2020
      ],
      "id": "c25601f6-a68b-4446-ac6b-c3e3dae00d2e",
      "name": "Global Constants",
      "credentials": {}
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8467648-c567-4716-a3b1-c18170e682f3",
              "name": "comentario",
              "value": "=Transferido de '{{ $('puxar_cliente2').item.json.clienteDepartamento }}' para '{{ $('atualizar_cliente').item.json.body.departamento }}'. Mensagem do Agente: '{{ $('atualizar_cliente').item.json.body.outros.mensagemAgente }}'. {{ $('atualizar_cliente').item.json.body.departamento === \"humano\" ? 'O que o agente deve responder neste caso?' : '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -840,
        1800
      ],
      "id": "9cee99b7-2dfb-4904-a201-88a3ff26283d",
      "name": "comentario_transferencia"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f6cbe8e0-9331-4015-aed9-22cfec90a6d1",
              "name": "departamento",
              "value": "=humano",
              "type": "string"
            },
            {
              "id": "c7fbf816-9505-4d98-b47a-1abbcf5c22f0",
              "name": "mensagem",
              "value": "Só um momento, estarei verificando como podemos lhe ajudar.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        240
      ],
      "id": "76673590-7075-4f6e-8ae2-c6eafb80d9bf",
      "name": "humano"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7f332c70-b70e-40dd-8c40-fdf104b36806",
              "leftValue": "={{ $json.history_items[0].comment.text_content }}",
              "rightValue": "IA:",
              "operator": {
                "type": "string",
                "operation": "notStartsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1880,
        3360
      ],
      "id": "8a2cfa69-dfdd-48ac-a796-d819386116df",
      "name": "comentario_humano"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM ao_clientes\nWHERE DATA ->> 'crmId' = '{{ $json.history_items[0].comment.parent }}'\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1620,
        3340
      ],
      "id": "57142be7-65df-4798-818d-498c48a6c287",
      "name": "cliente1",
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $json.numero }}\",\n  \"data\": {\n    \"departamentoOrigem\": \"humano\",\n    \"departamentoDestino\": \"{{ $json.data.departamentoOrigem }}\"\n  },\n  \"departamento\": \"{{ $json.data.departamentoOrigem }}\",\n  \"outros\": { \n    \"mensagemAgente\": \"Mensagem respondida\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        3540
      ],
      "id": "ba7f0afb-6f89-43a9-bc9a-f69223558d4d",
      "name": "atualizar_cliente3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agente-ofir/v1/agente",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1620,
        360
      ],
      "id": "e3b43db8-da43-4847-b2c9-de987938c5cd",
      "name": "rodar_agente",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "300daa9a-1196-4fdc-aa73-576d335ae5d3",
              "name": "mensagem",
              "value": "={{ $json.mensagem ?? $json.body.mensagem }}",
              "type": "string"
            },
            {
              "id": "8d09f964-1c63-4d61-8c67-36f59193788f",
              "name": "numero",
              "value": "={{ $json.numero ?? $json.body.numero }}",
              "type": "string"
            },
            {
              "id": "708eb996-fdf7-4811-b93a-dc6853942cfb",
              "name": "pushName",
              "value": "={{ $json.pushName ?? \"Novo lead\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1300,
        200
      ],
      "id": "8336a4ee-114c-472a-9211-02b9f0c5c2db",
      "name": "tratamento"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/agente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $('cliente1').item.json.numero }}\",\n  \"mensagem\": \"<mensagemHumano>{{ $('novo_comentario').item.json.history_items[0].comment.comment[0].text }}</mensagemHumano>\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        3540
      ],
      "id": "ec7ee6e7-258e-4eb9-a058-9f457d45ebaf",
      "name": "rodar_agente_request"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"mensagem\": \"{{ $json.mensagem }}\",\n  \"departamento\": \"{{ $json.departamento }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1080,
        1300
      ],
      "id": "6a30dd26-099e-4848-918d-42579532d05b",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.output) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        880,
        1300
      ],
      "id": "17d4a58e-6932-4631-9091-6c5b7e6f4f9d",
      "name": "tratamento2"
    },
    {
      "parameters": {
        "content": "## Agente IA: Secretaria (agendamentos)",
        "height": 80,
        "width": 1920,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        80,
        1740
      ],
      "id": "0bb51212-55dc-4f18-8938-8c9c290af290",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "numero",
              "value": "={{ $('secretaria_wh').item.json.body.numero }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        780,
        2040
      ],
      "id": "48535ddb-3c4d-426a-abd6-a5870e432d87",
      "name": "puxar_cliente5"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -40,
        2540
      ],
      "id": "8ad363b9-8b2e-4f35-be23-944b2061e97a",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.clienteNumero }}",
        "tableName": "ao_secretaria_chat",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        120,
        2540
      ],
      "id": "f3a57df2-2e0e-42c5-b8a6-8e9b90102101",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"mensagem\": \"{{ $json.mensagem }}\",\n  \"departamento\": \"{{ $json.departamento }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        2280
      ],
      "id": "8ab55a63-4844-417f-8eec-d1fe3242141d",
      "name": "Respond to Webhook5"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para deletar eventos e consultas no calendário usando o eventId",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "={{ $fromAI(\"calendarioId\",\"<calendario><calendarioId></calendarioId></calendario>\") }}",
          "mode": "id"
        },
        "eventId": "={{ $fromAI(\"eventId\",\"Id do evento que deve ser excluído\") }}",
        "options": {}
      },
      "id": "9a91ca12-1a90-410c-9894-6179d416374b",
      "name": "Deletar Evento1",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        380,
        2540
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para criar novas consultas no calendário.",
        "calendar": {
          "__rl": true,
          "value": "={{ $fromAI(\"calendarioId\",\"<calendario><calendarioId></calendarioId></calendario>\") }}",
          "mode": "id"
        },
        "start": "={{ $fromAI(\"Start_Time\",\"Horário inicial do evento ex.:2024-10-08 00:00:00\") }}",
        "end": "={{ $fromAI(\"End_Time\",\"Horário final do evento ex.:2024-10-08 00:01:00\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $('puxar_cliente5').item.json.clienteData.email }}"
          ],
          "summary": "=pendente | Consulta agendada. Telefone {{ $('puxar_cliente5').item.json.clienteNumero.split(\"@\")[0] }}\n"
        }
      },
      "id": "75152d8b-65a8-4be6-a806-7d8940efb628",
      "name": "Criar Eventos1",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        640,
        2540
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {},
      "id": "6e937404-447e-4388-a84c-f9b8540b6aba",
      "name": "Calculator1",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        240,
        2540
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para consultar datas e disponibilidade para novas consultas ou apenas para checar o que já foi agendado. ",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "={{ $fromAI(\"calendarioId\",\"<calendario><calendarioId></calendarioId></calendario>\") }}",
          "mode": "id"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $fromAI(\"Initital_DateTime\", \"Data e hora inicial da consulta Ex.: 2024-10-17 00:00:00\") }}",
          "timeMax": "={{ $fromAI(\"Final_DateTime\", \"Data e hora final da consulta Ex.: 2024-10-17 00:00:00\") }}",
          "query": ""
        }
      },
      "id": "c91479ec-f207-4e4b-a62a-0879e23c76a3",
      "name": "get_many",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        520,
        2540
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agente-ofir/v1/secretaria",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        100,
        2040
      ],
      "id": "b946f29e-bf47-409c-b9fc-0916488dc11d",
      "name": "secretaria_wh",
      "webhookId": "d711bc48-5fc8-4f7f-8354-787ef9e828f6"
    },
    {
      "parameters": {
        "team": "9012646112",
        "events": [
          "taskCommentPosted"
        ],
        "filters": {}
      },
      "type": "n8n-nodes-base.clickUpTrigger",
      "typeVersion": 1,
      "position": [
        -2100,
        3360
      ],
      "id": "53933425-64cc-420d-84ba-996e973824ae",
      "name": "novo_comentario",
      "webhookId": "1987f979-340c-48a4-98e1-17438e81017a"
    },
    {
      "parameters": {
        "content": "## Manutenção das talelas do database - ofir\n",
        "height": 380,
        "width": 660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2140,
        760
      ],
      "id": "548be7db-c3a7-4a37-8429-5bb780f23b4b",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "rodar para criar tabela \"ao_clientes\"",
        "height": 274.7923843700217,
        "width": 273.1627906976745,
        "color": 4
      },
      "id": "a72ff942-0d52-4cb6-92f9-063456669a05",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2100,
        820
      ]
    },
    {
      "parameters": {
        "content": "rodar para limpar todas as tabelas",
        "height": 274.7923843700217,
        "width": 273.1627906976745,
        "color": 3
      },
      "id": "9db80ad1-4081-4301-8ca9-edcf1ba78ab5",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1800,
        820
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Drop the table if it exists\nDROP TABLE IF EXISTS ao_clientes;\n\n-- Create the table\nCREATE TABLE ao_clientes (\n    numero VARCHAR PRIMARY KEY,\n    departamento VARCHAR,\n    data JSONB DEFAULT '{}',\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create trigger function to automatically update updated_at\nCREATE OR REPLACE FUNCTION update_updated_at_column_ao_clientes()\nRETURNS TRIGGER AS $\nBEGIN\n    NEW.updated_at = CURRENT_TIMESTAMP;\n    RETURN NEW;\nEND;\n$ language 'plpgsql';\n\n-- Create trigger that calls the function before each update\nCREATE TRIGGER update_updated_at_column_ao_clientes\n    BEFORE UPDATE ON ao_clientes\n    FOR EACH ROW\n    EXECUTE FUNCTION update_updated_at_column_ao_clientes();",
        "options": {}
      },
      "id": "e6a1a8f0-9da8-4684-a8f1-d2980c119c57",
      "name": "criar_ao_clientes",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2020,
        900
      ],
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DO $\nBEGIN\n    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'ao_recepcionista_chat') THEN\n        DELETE FROM ao_recepcionista_chat;\n    END IF;\n\n    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'ao_comercial_chat') THEN\n        DELETE FROM ao_comercial_chat;\n    END IF;\n\n    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'ao_secretaria_chat') THEN\n        DELETE FROM ao_secretaria_chat;\n    END IF;\n\n    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'ao_clientes') THEN\n        DELETE FROM ao_clientes;\n    END IF;\nEND $;",
        "options": {}
      },
      "id": "04a5007d-af21-454a-8979-00ea9915c898",
      "name": "limpar_todas_as_tabelas",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1720,
        900
      ],
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "operation": "setCustomField",
        "task": "={{ $json.clienteData.crmId }}",
        "field": "={{ $('config1').item.json.consultaDataId }}",
        "value": "={{ $('criar_ou_atualizar_lead').item.json.body.data.consultaData.toDateTime().format('x') }}"
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [
        -1000,
        2900
      ],
      "id": "e0c74893-0290-45b9-9ba3-cbb9fcbfb94d",
      "name": "atualizar_consulta_data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4468a981-b3b4-404f-93d7-0c21b6a11cc1",
              "leftValue": "={{ $('tratamento4').item.json.eventId }}",
              "rightValue": "eventId",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        840,
        2280
      ],
      "id": "525d4dfa-20d3-410c-a0b2-3155d0df9a0d",
      "name": "novo_evento"
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "={{ $json.calendarioId }}",
          "mode": "id"
        },
        "eventId": "={{ $json.eventId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.2,
      "position": [
        1060,
        2260
      ],
      "id": "4df99de8-f6f1-4a7c-b276-a4fab4ae157c",
      "name": "puxar_consulta",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mrq3mc8a3QMeRdst",
          "name": "Google Calendar - Black"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/clickup",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $('puxar_cliente5').item.json.clienteNumero }}\",\n  \"acao\": \"ATUALIZAR_CONSULTA_DATA\",\n  \"data\": {\n    \"consultaData\": \"{{ $json.start.dateTime }}\",\n    \"calendarioNome\": \"{{ $('tratamento4').item.json.calendarioNome }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        2260
      ],
      "id": "0ca1e33e-2523-4a76-927e-fc3d163ab12f",
      "name": "atualizar_consultaData_request"
    },
    {
      "parameters": {
        "resource": "comment",
        "commentOn": "task",
        "id": "={{ $('puxar_cliente1').item.json.clienteData.crmId }}",
        "commentText": "=IA: Consulta Agendada para {{ $('criar_ou_atualizar_lead').item.json.body.data.consultaData.toDateTime().format('dd/MM/yyyy hh:mm:ss')}} com {{ $('criar_ou_atualizar_lead').item.json.body.data.calendarioNome }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [
        -800,
        2900
      ],
      "id": "1b65a748-488a-46f5-8344-a73dd99fb5e1",
      "name": "adicionar_comentario_crm1"
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $('puxar_cliente1').item.json.clienteData.crmId }}",
        "updateFields": {
          "status": "AGENDADOS"
        }
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [
        -620,
        2900
      ],
      "id": "d3ec837c-28e4-4c2a-91f2-74e22d953d98",
      "name": "mudar_de_funil"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('novo_comentario').item.json.history_items[0].comment.comment[0].text }}",
                    "rightValue": "pausar",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PAUSAR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4e2abc0f-6c42-4801-9975-e5b0b269e4a2",
                    "leftValue": "={{ $('novo_comentario').item.json.history_items[0].comment.comment[0].text }}",
                    "rightValue": "ativar",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": "={{ true }}",
              "outputKey": "ATIVAR"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1400,
        3340
      ],
      "id": "95572f46-3ada-4c74-a6c8-63facc0cd2ab",
      "name": "comandos"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $json.numero }}\",\n  \"data\": {\n    \"departamentoOrigem\": \"{{ $json.departamento }}\",\n    \"departamentoDestino\": \"humano\"\n  },\n  \"departamento\": \"humano\",\n  \"outros\": { \n    \"mensagemAgente\": \"Conversa pausada.\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        3160
      ],
      "id": "3c719391-2cae-45ef-abdb-1e36cd14e7f3",
      "name": "atualizar_cliente4"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $json.numero }}\",\n  \"data\": {\n    \"departamentoOrigem\": \"humano\",\n    \"departamentoDestino\": \"{{ $json.data.departamentoOrigem }}\"\n  },\n  \"departamento\": \"{{ $json.data.departamentoOrigem }}\",\n  \"outros\": { \n    \"mensagemAgente\": \"Conversa ativada.\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        3340
      ],
      "id": "acb02828-a4b6-448c-8ceb-ba53f87d2858",
      "name": "atualizar_cliente5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6f17d77b-0e6d-4651-9229-5c2ea486cfc2",
              "name": "calendarios",
              "value": "[\n { \"nome\": \"karen\", \"calendarioId\": \"c_4602a434f108be560618c473412d58a61936b831423835cdb41a3641987111f0@group.calendar.google.com\" },\n { \"nome\": \"karine\", \"calendarioId\": \"c_f1584a79804ce179cfa693d02395eba6f339089502d9847ba95892c1394d9605@group.calendar.google.com\" },\n { \"nome\": \"ketlin\", \"calendarioId\": \"c_93967bd84f0b8c99013ff00ea03877bf9452521d29a50aac7d695f5b2e69d443@group.calendar.google.com\" }\n]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        2040
      ],
      "id": "1a2c627a-2b32-4284-b173-a72d2591b048",
      "name": "config2"
    },
    {
      "parameters": {
        "content": "## Configuração",
        "height": 240,
        "width": 190
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        1960
      ],
      "id": "ea97e543-90af-4f31-b309-406e73b75acc",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  item.json.calendarioSorteio = item.json.calendarios[Math.floor(Math.random() * item.json.calendarios.length)]\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        2040
      ],
      "id": "1e750a65-e836-4e9d-834e-522462307295",
      "name": "sorteio_calendario"
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const output = JSON.parse(item.json.output);\n\n  let mensagem = output.mensagem;\n\n  // Foi transferido de departmaneto? Então devemos utilizar a mensagem do cliente para \n  // ser encaminhada ao próximo agente e não a mensagem do agente atual.\n  // \n  // Esta condicional checa se o departamento mudou.\n  if ($('puxar_cliente5').item.json.clienteDepartamento !== output.departamento) {\n    mensagem = $('secretaria_wh').item.json.body.mensagem;\n    output.mensagem = mensagem;\n  }\n  \n  item.json = output;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        2280
      ],
      "id": "61e82c59-bde2-4d8e-886a-84ac3dcadc00",
      "name": "tratamento4"
    },
    {
      "parameters": {
        "errorMessage": "Infinity looping"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -580,
        -120
      ],
      "id": "b7d0820f-7cc7-46d1-bb3d-b4d8ea6cbc9e",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<mensagem>{{ $('secretaria_wh').item.json.body.mensagem }}</mensagem>",
        "options": {
          "systemMessage": "=Departamento atual: <departamento>{{ $json.clienteDepartamento }}</departamento>\n\n<departamentos>\n {{ $json.departamentos.map(item => `\n  <departamento_descricao>\n   <departamento>${item.departamento}</departamento>\n   <regra_de_transferencia>\n    ${item.regras}\n   </regra_de_transferencia>\n </departamento_descricao>\n`)  }}\n</departamentos>\n\n<calendarios>\n{{ $('config2').item.json.calendarios.map(item => `\n    <calendario>\n      <nome>${item.nome}</nome>\n      <calendarioId>${item.calendarioId}</calendarioId>\n    </calendario>\n`) }}\n</calendarios>\n\n<REGRAS_PRINCIPAIS>\n\n<INSTRUCAO> Você é uma secretária virtual projetada para gerenciar de forma eficiente e amigável os agendamentos e cancelamentos de consultas. Seu nome é \"Jurema\" e você trabalha para a OdontoClinic Londrina.\n\nFocada em oferecer uma experiência prática e personalizada, o assistente exibe horários disponíveis, pergunta se o cliente concorda com a data e hora antes de confirmar o agendamento e fornece todos os detalhes essenciais após a marcação.\n\nPergunte ao cliente se ele possui alguma preferência por algum profissional que esteja listado em <calendarios></calendarios>. \n\nCaso não possuir, escolha o calendario: {{ $('sorteio_calendario').item.json.calendarioSorteio.nome }}, calendarioId: {{ $('sorteio_calendario').item.json.calendarioSorteio.calendarioId }}. \n\nUse o <calendarioId></calendarioId> na hora de buscar, criar e deletar eventos.\n\nO assistente também respeita o formato brasileiro de data e hora (DD/MM/AAAA e HH) e opera no fuso horário \"America/Sao_Paulo\".\n\nSempre verifica as datas disponiveis no calendário antes de oferecer ao cliente.\n\nhorário de funcionamento:\nSegunda a sexta: das 8h às 21h.\nSábado: das 8h às 12h. nunca agende fora do horario de funcionamento.\n\nUse como referencia para a data e hora atual: <currentDateTime>{{ (() => {\n  const date = new Date(); // Obtém a data atual\n  const days = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado']; // Dias da semana em português\n  const pad = n => n.toString().padStart(2, '0'); // Adiciona zero à esquerda\n  const dayName = days[date.getDay()]; // Obtém o nome do dia\n  const year = date.getFullYear();\n  const month = pad(date.getMonth() + 1); // Mês começa em 0\n  const day = pad(date.getDate());\n  const hours = pad(date.getHours());\n  const minutes = pad(date.getMinutes());\n  const seconds = pad(date.getSeconds());\n  return `${dayName}, ${year}-${month}-${day} ${hours}:${minutes}:${seconds}`; // Retorna no formato desejado\n})() }}</currentDateTime>\n\nNunca agende nada antes de: {{ $now }}\n\nfaça agendamentos de 30 minutos de duração.\nse o horario pedido pelo cliente ja tiver alguma consulta marcada, sugira o mais proximo 30 minutos antes ou 30 minutos depois da consulta existente, mas esta proibido marcar em um horario que ja exista uma consulta\n\nPergunte se o cliente pode confirmar, mas não confirme diretamente a consulta.\n\nSempre utilize o timezone \"America/Sao_Paulo\" para todas as operações.\n\nSempre utilize a tool Calculator1 para calcular diferença de datas, horarios e dias. Apenas use numero inteiros para calcular valores.\n\n<AGENDAMENTO>\nPara pesquisar as datas de um evento no calendário, sempre utilize a tool Calculator1.\n</AGENDAMENTO>\n\n<REAGENDAMENTO>\nDe acordo com o histórico de mensagens, siga o processo de reagendamento nesta ordem:\n1. use a calculadora(apenas some numeros inteiros, sem usar textos) para identificar a data e hora especifica que o cliente gostaria de marcar a <NOVA_CONSULTA>.\n2. Busque todos os eventos apartir do horario da <NOVA_CONSULTA> até para os próximos 2 dias.\n2.1 Caso já houver uma consulta no mesmo horário, sugira uma data mais próxima.\n2.2 Caso não houver nenhuma consulta no mesmo horário, confirme com o usuário a <NOVA_CONSULTA>.\n3. Quando o usário confirmar, delete a consulta anterior usando o eventId. Crie a <NOVA_CONSULTA>.\n</REAGENDAMENTO>\n\n<CANCELAMENTO>\nBaseado no histórico de mensagens, extraia as informações do evento a ser cancelado (data, hora e eventId).\nCaso não localize o evento, retorne false com uma mensagem de erro.\n</CANCELAMENTO>\n\n<CONFIRMACAO>\nEscreva mensagens breves e cordiais confirmando a consulta com base no evento já agendado, respeitando o timezone America/Sao_Paulo.\n</CONFIRMACAO>\n\n<AGENDAMENTOS>\nQuando a <mensagem></mensagem> for algo parecido com \"Ola tudo bem? Eu estou precisando fazer uma limpesa dental, como q eu façø? Tem agendamento?\"\n\nApenas realize uma busca até o próximo dia útil e informe a data mais próxima para um possivel agendamento.\n</AGENDAMENTOS>\n\n<FALLBACK>\nCaso você não identificar nenhunma intenção especifican relacionado a agendamentos, realize uma busca dos próximos agendamentos até o próximo dia útil e retorne a data disponível mais próxima para ser agendada.\n</FALLBACK>\n\n<TROCA_DE_PROFISSIONAL>\nCaso o cliente queira mudar de profissional, use as regras de <REAGENDAMENTO></REAGENDAMENTO> com o calendarioId da profissional que ele queira, antes de realizar a troca.\n</TROCA_DE_PROFISSIONAL>\n\n\nExceções:\n\nCaso identifique uma situação específica de exceção, encaminhe para o departamento humano.\n\nRegras Importantes:\n\nSeja cordial e direta.\nResponda sempre no timezone: America/Sao_Paulo.\nNunca confirme agendamentos automaticamente; peça confirmação ao cliente.\nApenas responda sobre agendamentos; ignore qualquer outro contexto.\nRetorne mensagens no formato JSON, sem aspas ou informações adicionais.\n\nExemplo de Resposta:\n\n<departamento>teste</departamento>\nHuman: Pode marcar uma reunião para terça às 14h?\nAI: { \"mensagem\": \"Terça-feira às 14h está disponível. Poderia confirmar esse horário?\", \"departamento\": \"teste\" }\n\n<OUTPUT>\nExemplo quando uma consulta for agendada e tiver um eventId da ferramenta, inserir o eventId no JSON conforme o Exemplo:\n\n<output_format_eventId>\n{ \"mensagem\": \"message from AI\", \"departamento\": \"departamento\", \"eventId\": \"id\",  \"calendarioId\": \"id\", \"calendarioNome\": \"nome\" }\n</output_format_eventId>\n\n<output_format_eventId_example>\n{ \"mensagem\": \"message from AI\", \"departamento\": \"teste\", \"eventId\": \"87aw898ad807d80s\",  \"calendarioId\": \"c_f1584a79804ce179cfa693d02395eba6f339089502d9847ba95892c1394d9605@group.calendar.google.com\"\", \"calendarioNome\": \"Flavia\" }\n</output_format_eventId_example>\n\n<output_schema>\n{ \n  \"mensagem\": STRING, \n  \"departamento\": STRING, \n  \"eventId\": STRING|UNDEFINED,\n  \"calendarioId\": STRING|UNDEFINED,\n  \"calendarioNome\": STRING|UNDEFINED \n}\n</output_schema>\n\n</OUTPUT>\n\nCertifique-se de que na mensagem final ela está usando o formato descrito em <OUTPUT>.\n\n</REGRAS_PRINCIPAIS>\n\n\n<PROCESSO_DE_DECISAO>\n\nConsulte as <regra_de_transferencia> \n\nEscolha entre as duas ações possíveis:\n\nApenas responder ao cliente com uma mensagem\n\nOu transferir o cliente de departamento e com uma mensagem para o departamento ao qual o cliente será transferido.\n\nNão informe ao cliente sobre a transferência.\n\nQuando houver uma <mensagemHumano></mensagemHumano> dentro de <mensagem></mensagem> responda o que estiver na <mensagemHumano></mensagemHumano> e continue no <departamento>{{ $json.clienteDepartamento }}</departamento>, não é para transferir o cliente para o departamento humano neste caso. Isto significa que um humano, responsável por este serviço respondeu ao cliente.\n\n</PROCESSO_DE_DECISAO>\n\nNão invente nenhuma informação que não foi dada neste system_prompt.\n\nCaso você não souber a informação, consulte <regra_de_transferencia> para transferir o cliente para algum outro departamento.\n\n<exemplos>\n  <exemplo>\n    Departamento atual: <departamento>teste</departamento>\n    Human: <mensagemHumano>Voce precisa de uma ajuda espeecializada</mensagemHumano>\n    AI: { \"mensagem\": \"Voce precisa de uma ajuda espeecializada\", \"departamento\": \"teste\" }\n  </exemlo>\n  <exemplo>\n    Departamento atual: <departamento>teste</departamento>\n    Human: Ola eu gostaria de agendar a minha consulta para o serviço de clareamento dental. Voces teriam disponibilidade para amanha pela manha?\n    AI: Calculator1 tool call -  Only INTEGERS\n    AI: get_many tool call\n    AI: { \"mensagem\": \"Amanhã pela manhã está disponível para o agendamento de um clareamento dental. Você gostaria de agendar para algum horário específico entre 8h e 12h?\", \"departamento\": \"teste\" }\n  </exemlo>\n  <exemplo>\n    Departamento atual: <departamento>teste</departamento>\n    Human: A eu tenho interesse sim. Poderia ser amanha as 10 da manha?\n    AI: Calculator1 tool call -  Only INTEGERS\n    AI: get_many tool call\n    AI: { \"mensagem\": \"Amanhã as 10h está disponível para o agendamento . Posso confirmar?\", \"departamento\": \"teste\" }\n  </exemlo>\n  </exemplo>\n  <exemplo>\n    Departamento atual: <departamento>teste</departamento>\n    Human: Eu preciso agendar o meu clareamento dental. teria disponibilidade para hoje de tarde? obrigado\n    AI: Calculator1 tool call -  Only INTEGERS\n    AI: get_many tool call\n    AI: { \"mensagem\": \"Hoje à tarde está disponível para o agendamento de um clareamento dental. Você gostaria de agendar para algum horário específico entre 13h e 21h?\", \"departamento\": \"teste\" }\n    Human: Pode ser as 13h.\n    AI: Calculator1 tool call -  Only INTEGERS\n    AI: { \"mensagem\": \"Sua consulta de clareamento dental foi agendada para hoje às 13h com a Flavia. Se precisar de algo mais, estou à disposição!\", \"departamento\": \"teste\", \"eventId\": \"87aw898ad807d80s\",  \"calendarioId\": \"c_f1584a79804ce179cfa693d02395eba6f339089502d9847ba95892c1394d9605@group.calendar.google.com\"\", \"calendarioNome\": \"Flavia\" }\n  </exemplo>\n  <exemplo>\n    Departamento atual: <departamento>secretaria</departamento>\n    Human: Perdão, poderia ser com a Karine no mesmo horario esta consulta? obrigado\n    AI: Calculator1 tool call -  Only INTEGERS\n    AI: Deletar Evento1 tool call\n    AI: get_many tool call. Example when it returns events on the same requested date and time\n    AI: { \"mensagem\": \"Desculpe mas a Karine está já ocupada neste horario, poderia agendar com outro profissional?\", \"departamento\": \"secretaria\" }\n  </exemlo>\n<exemplos>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        120,
        2280
      ],
      "id": "0cbc1708-4c5e-42a5-89d6-3c5301ad6f18",
      "name": "agente_secretaria"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f1e9e8eb-6578-4a48-8a36-292501188729",
              "leftValue": "={{ $json.clienteData.email !== undefined && $json.clienteData.nome !== undefined && $json.clienteData.cpf !== undefined }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1000,
        2040
      ],
      "id": "a5c58d71-9b9b-4164-b647-9b189630a974",
      "name": "cadastro_completo"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<mensagem>{{ $('secretaria_wh').item.json.body.mensagem }}</mensagem>",
        "options": {
          "systemMessage": "=Departamento atual: <departamento>{{ $json.clienteDepartamento }}</departamento>\n\n<departamentos>\n {{ $json.departamentos.map(item => `\n  <departamento_descricao>\n   <departamento>${item.departamento}</departamento>\n   <regra_de_transferencia>\n    ${item.regras}\n   </regra_de_transferencia>\n </departamento_descricao>\n`)  }}\n</departamentos>\n\nVocê é uma secretária virtual projetada para gerenciar de forma eficiente e amigável o cadastro do cliente antes de realizar uma consulta. Seu nome é \"Jurema\" e você trabalha para a OdontoClinic Londrina.\n\nA sua função é solicitar o Nome, email e CPF do cliente.\n\nO Email tem que ser válido. Caso contrário, solicite ao cliente para informar um email válido.\n\nUse a tool \"atualizar_cliente_cadastro\" assim que o cliente responder essas 3 informações. \n\nApós atualizar o cadastro usando a tool atualizar_cliente_cadastro, pergunte então qual a preferência de dia e horario do cliente.\n\nNão informe que já estarea checando a disponibilidade. Termine sempre com uma pergunta.\n\n\nREGRAS PRINCIPAIS:\n\nMantenha respostas curtas e objetivas\nSeja sempre cordial e prestativa\nVocê deve avaliar a mensagem do cliente e decidir entre transferir ou responder diretamente\n\nPROCESSO DE DECISÃO:\n\nIdentifique a necessidade na mensagem\nConsulte as <regra_de_transferencia> \n\nEscolha entre as duas ações possíveis:\n\nApenas responder ao cliente com uma <mensagem>\n\nOu transferir o cliente de departamento e com uma <mensagem> para o departtamento ao qual o cliente será transferido.\n\nNão informe ao cliente sobre a transferência.\n\nSempre responda o cliente, quando não souber o que responder, avise que irá chamar um assistente para lhe ajudar.\n\nQuando houver uma <mensagemHumano></mensagemHumano> dentro de <mensagem></mensagem> responda o que estiver na <mensagemHumano></mensagemHumano> e continue no <departamento>{{ $json.clienteDepartamento }}</departamento>, não é para transferir o cliente para o departamento humano neste caso. Isto significa que um humano, responsável por este serviço respondeu ao cliente.\n\nResponda apenas usando o formato em JSON, sem aspas. Apenas o JSON.\n\n<output_schema>\n{ \n  \"mensagem\": STRING, \n  \"departamento\": STRING\n}\n</output_schema>\n\nCertifique-se de que na mensagem final ela está usando o formato descrito em <output_schema>.\n\n<exemplos>\n  <exemplo>\n    Human: Eu preciso agendar o meu clareamento dental. teria disponibilidade para hoje de tarde? obrigado\n    AI: { \"mensagem\": \"Para realizar o agendamento da consulta, poderia por gentileza me passar o seu nome, email e cpf?\", \"departamento\": \"secretaria\" }\n    Human: Claro, Guilherme Reis, teste@gmail.com e 07216216127\n    AI: atualizar_cliente_cadastro tool call\n    AI: Obrigada! Você possui alguma preferência de dia e horário para a consulta?\n  </exemlo>\n  <exemplo>\n  Departamento atual: <departamento>secretaria</departamento>\n  Human: <mensagemHumano>Voce precisa de uma ajuda espeecializada</mensagemHumano>\n  AI: { \"mensagem\": \" Voce precisa de uma ajuda espeecializada\": \"secretaria\" }\n  </exemlo>\n<exemplos>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1260,
        1860
      ],
      "id": "68c04f38-d543-40a6-ad3c-27dc8e353faf",
      "name": "agente_auxiliar_secretaria"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.clienteNumero }}",
        "tableName": "ao_secretaria_chat",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1360,
        2060
      ],
      "id": "456afe66-88c3-4442-86b1-124b3bb6ec74",
      "name": "Postgres Chat Memory3",
      "credentials": {
        "postgres": {
          "id": "mgxUJp91OulKSJZt",
          "name": "Postgres - BlackSB"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1220,
        2060
      ],
      "id": "cf194b90-2c71-4251-a24e-206e67256e02",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "PmsGHicqVllH9lH6",
          "name": "OpenAi - black"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"mensagem\": \"{{ $json.mensagem }}\",\n  \"departamento\": \"{{ $json.departamento }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1800,
        1860
      ],
      "id": "7a4b29c7-ba0d-48e5-bf42-ac5747d07c94",
      "name": "Respond to Webhook6"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.output) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1600,
        1860
      ],
      "id": "c0c53ae4-474b-4169-9b4f-3118a1c2cb46",
      "name": "tratamento3"
    },
    {
      "parameters": {
        "toolDescription": "Use esta tool para atualizar o cadastro do cliente. Use o formato JSON { nome: STRING, email: STRING, cpf: STRING } no campo data. O campo data é do tipo objeto.",
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "numero",
              "valueProvider": "fieldValue",
              "value": "={{ $json.clienteNumero }}"
            },
            {
              "name": "departamento",
              "valueProvider": "fieldValue",
              "value": "={{ $json.clienteDepartamento }}"
            },
            {
              "name": "data"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1500,
        2060
      ],
      "id": "92f07bbc-d983-4bd5-b34e-d16608fe24b0",
      "name": "atualizar_cliente_cadastro"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa6fddc3-3892-4582-98e8-e60bb569d540",
              "name": "numero",
              "value": "={{ $json.body.numero }}",
              "type": "string"
            },
            {
              "id": "90038942-ba44-44b5-a549-c05a62dbe0ec",
              "name": "departamento",
              "value": "={{ $json.body.departamento }}",
              "type": "string"
            },
            {
              "id": "8e18a645-824b-437e-8dd3-4c461439a78b",
              "name": "data",
              "value": "={{ typeof $json.body.data === 'object' ? JSON.stringify($json.body.data) : $json.body.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1900,
        1820
      ],
      "id": "b60bb197-cbb9-4d1f-8983-34af33c654d8",
      "name": "tratamento5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        580,
        540
      ],
      "id": "abb00d03-e448-40f8-82bd-be4457c48301",
      "name": "Evolution API",
      "credentials": {}
    },
    {
      "parameters": {},
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -1300,
        2020
      ],
      "id": "74114927-d01a-4721-98a3-ef5fb07f9aec",
      "name": "Evolution API1",
      "credentials": {}
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook-test/agente-ofir/v1/secretaria",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"numero\": \"{{ $json.clienteNumero }}\",\n  \"mensagem\": \"{{ $json.mensagem }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        60
      ],
      "id": "3cbd8764-efce-493a-a13e-889690de1ad6",
      "name": "ia_secretaria",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YXr7eKy7abzLW8Iu",
          "name": "Header Auth - AO"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Use esta tool para atualizar o interesse do cliente. Use o formato JSON { servicoInteresse: STRING } no campo data. O campo data é do tipo objeto.",
        "method": "PATCH",
        "url": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "numero",
              "valueProvider": "fieldValue",
              "value": "={{ $json.clienteNumero }}"
            },
            {
              "name": "departamento",
              "valueProvider": "fieldValue",
              "value": "={{ $json.clienteDepartamento }}"
            },
            {
              "name": "data"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        700,
        1500
      ],
      "id": "15b07f1c-0cf3-492b-acf5-707966f1df06",
      "name": "atualizar_interesse"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        840,
        1500
      ],
      "id": "9f5b5b6e-2c0a-41ee-94ac-6b3f96367417",
      "name": "calculadora"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config": {
      "main": [
        [
          {
            "node": "auth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "auth": {
      "main": [
        [
          {
            "node": "tratamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cliente": {
      "main": [
        [
          {
            "node": "cliente_existente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cliente_existente": {
      "main": [
        [
          {
            "node": "cliente_atualizado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "novo_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "novo_cliente": {
      "main": [
        [
          {
            "node": "criar_lead_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "puxar_cliente": {
      "main": [
        [
          {
            "node": "mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "departamento": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ia_comercial",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ia_secretaria",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agente_retorno": {
      "main": [
        [
          {
            "node": "transferir_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transferir_cliente": {
      "main": [
        [
          {
            "node": "atualizar_cliente2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "criar_ou_atualizar_lead": {
      "main": [
        [
          {
            "node": "config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "puxar_cliente1": {
      "main": [
        [
          {
            "node": "crm_acao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "crm_acao": {
      "main": [
        [
          {
            "node": "criar_lead_crm",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "adicionar_comentario_crm",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "atualizar_consulta_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "criar_cliente": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_cliente": {
      "main": [
        [
          {
            "node": "tratamento5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "puxar_cliente2": {
      "main": [
        [
          {
            "node": "query_atualizar_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "query_atualizar_data": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        [
          {
            "node": "foi_transferido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_cliente1": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "criar_lead_crm": {
      "main": [
        [
          {
            "node": "atualizar_cliente1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_cliente2": {
      "main": [
        [
          {
            "node": "tratamento_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mensagem": {
      "main": [
        [
          {
            "node": "departamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tratamento_cliente": {
      "main": [
        [
          {
            "node": "departamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "criar_lead_request": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config1": {
      "main": [
        [
          {
            "node": "puxar_cliente1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "adicionar_comentario_crm": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "foi_transferido": {
      "main": [
        [
          {
            "node": "comentario_transferencia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "adicionar_comentario_request": {
      "main": [
        [
          {
            "node": "notificar_quando_for_humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "departamentos_tratamento": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "puxar_cliente4": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "tratamento2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "comercial_wh": {
      "main": [
        [
          {
            "node": "puxar_cliente4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ia_comercial": {
      "main": [
        [
          {
            "node": "agente_retorno",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comentario_transferencia": {
      "main": [
        [
          {
            "node": "adicionar_comentario_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "humano": {
      "main": [
        [
          {
            "node": "agente_retorno",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comentario_humano": {
      "main": [
        [
          {
            "node": "cliente1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cliente1": {
      "main": [
        [
          {
            "node": "comandos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_cliente3": {
      "main": [
        [
          {
            "node": "rodar_agente_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rodar_agente": {
      "main": [
        [
          {
            "node": "tratamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tratamento": {
      "main": [
        [
          {
            "node": "puxar_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tratamento2": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "puxar_cliente5": {
      "main": [
        [
          {
            "node": "cadastro_completo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "agente_secretaria",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "agente_secretaria",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook5": {
      "main": [
        [
          {
            "node": "novo_evento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Evento1": {
      "ai_tool": [
        [
          {
            "node": "agente_secretaria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Criar Eventos1": {
      "ai_tool": [
        [
          {
            "node": "agente_secretaria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "agente_secretaria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_many": {
      "ai_tool": [
        [
          {
            "node": "agente_secretaria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "secretaria_wh": {
      "main": [
        [
          {
            "node": "config2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "novo_comentario": {
      "main": [
        [
          {
            "node": "comentario_humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_consulta_data": {
      "main": [
        [
          {
            "node": "adicionar_comentario_crm1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "novo_evento": {
      "main": [
        [
          {
            "node": "puxar_consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "puxar_consulta": {
      "main": [
        [
          {
            "node": "atualizar_consultaData_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "adicionar_comentario_crm1": {
      "main": [
        [
          {
            "node": "mudar_de_funil",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mudar_de_funil": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comandos": {
      "main": [
        [
          {
            "node": "atualizar_cliente4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "atualizar_cliente5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "atualizar_cliente3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config2": {
      "main": [
        [
          {
            "node": "sorteio_calendario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sorteio_calendario": {
      "main": [
        [
          {
            "node": "puxar_cliente5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tratamento4": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agente_secretaria": {
      "main": [
        [
          {
            "node": "tratamento4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cadastro_completo": {
      "main": [
        [
          {
            "node": "agente_secretaria",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "agente_auxiliar_secretaria",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agente_auxiliar_secretaria": {
      "main": [
        [
          {
            "node": "tratamento3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory3": {
      "ai_memory": [
        [
          {
            "node": "agente_auxiliar_secretaria",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "agente_auxiliar_secretaria",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "tratamento3": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_cliente_cadastro": {
      "ai_tool": [
        [
          {
            "node": "agente_auxiliar_secretaria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "tratamento5": {
      "main": [
        [
          {
            "node": "puxar_cliente2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ia_secretaria": {
      "main": [
        [
          {
            "node": "agente_retorno",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "atualizar_interesse": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calculadora": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "criar_ou_atualizar_lead": [
      {
        "json": {
          "headers": {
            "host": "aula-n8n.jnsbgu.easypanel.host",
            "user-agent": "axios/1.7.4",
            "content-length": "120",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "AFEFAEF21321421AFSAFAS123312321",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aula-n8n.jnsbgu.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ade96d3958",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "numero": "447928821569@s.whatsapp.net",
            "acao": "ATUALIZAR_CONSULTA_DATA",
            "data": {
              "consultaData": "2024-12-30T11:00:00Z",
              "calendarioNome": "Karen"
            }
          },
          "webhookUrl": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/clickup",
          "executionMode": "production"
        }
      }
    ],
    "criar_cliente": [
      {
        "json": {
          "headers": {
            "host": "aula-n8n.jnsbgu.easypanel.host",
            "user-agent": "axios/1.7.4",
            "content-length": "69",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "AFEFAEF21321421AFSAFAS123312321",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aula-n8n.jnsbgu.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ade96d3958",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "numero": "447928821569@s.whatsapp.net",
            "mensagem": "Pode confirmar."
          },
          "webhookUrl": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/secretaria",
          "executionMode": "production"
        }
      }
    ],
    "atualizar_cliente": [
      {
        "json": {
          "headers": {
            "host": "aula-n8n.jnsbgu.easypanel.host",
            "user-agent": "axios/1.7.4",
            "content-length": "166",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "AFEFAEF21321421AFSAFAS123312321",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aula-n8n.jnsbgu.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ade96d3958",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "numero": "447928821569@s.whatsapp.net",
            "departamento": "secretaria",
            "data": "{\"nome\":\"Cezar Augusto\", \"email\":\"cezinha@sistemas.com\", \"cpf\":\"9987665246\"}"
          },
          "webhookUrl": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
          "executionMode": "production"
        }
      }
    ],
    "criar_ou_atualizar_lead1": [
      {
        "json": {
          "headers": {
            "host": "aula-n8n.jnsbgu.easypanel.host",
            "user-agent": "axios/1.7.4",
            "content-length": "40",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "AFEFAEF21321421AFSAFAS123312321",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aula-n8n.jnsbgu.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ade96d3958",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "numero": "447928821569@s.whatsapp.net",
            "acao": "CRIAR_LEAD",
            "data": {
              "nome": "Guilherme Reis",
              "telefone": "447928821569"
            }
          },
          "webhookUrl": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/cliente",
          "executionMode": "production"
        }
      }
    ],
    "comercial_wh": [
      {
        "json": {
          "headers": {
            "host": "aula-n8n.jnsbgu.easypanel.host",
            "user-agent": "axios/1.7.4",
            "content-length": "220",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "AFEFAEF21321421AFSAFAS123312321",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aula-n8n.jnsbgu.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ade96d3958",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "numero": "447928821569@s.whatsapp.net",
            "mensagem": "Legal, mas qual o valor?"
          },
          "webhookUrl": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/comercial",
          "executionMode": "production"
        }
      }
    ],
    "secretaria_wh": [
      {
        "json": {
          "headers": {
            "host": "aula-n8n.jnsbgu.easypanel.host",
            "user-agent": "axios/1.7.4",
            "content-length": "114",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "AFEFAEF21321421AFSAFAS123312321",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aula-n8n.jnsbgu.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ade96d3958",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "numero": "447928821569@s.whatsapp.net",
            "mensagem": "pode confirmar."
          },
          "webhookUrl": "https://aula-n8n.jnsbgu.easypanel.host/webhook/agente-ofir/v1/secretaria",
          "executionMode": "production"
        }
      }
    ],
    "novo_comentario": [
      {
        "json": {
          "event": "taskCommentPosted",
          "history_items": [
            {
              "id": "4358193514212438515",
              "type": 1,
              "date": "1735564715891",
              "field": "comment",
              "parent_id": "901206791497",
              "data": {},
              "source": null,
              "user": {
                "id": 81321313,
                "username": "Guilherme Reis",
                "email": "imperador@dinastia.uk",
                "color": "",
                "initials": "GR",
                "profilePicture": null
              },
              "before": null,
              "after": "90120092219481",
              "comment": {
                "id": "90120092219481",
                "date": "1735564715891",
                "parent": "86978gr3x",
                "type": 1,
                "comment": [
                  {
                    "text": "ativar",
                    "attributes": {}
                  },
                  {
                    "text": "\n",
                    "attributes": {
                      "block-id": "block-7fb2f27e-58ef-4f38-87a7-3c9a2a2c81e3"
                    }
                  }
                ],
                "text_content": "ativar\n",
                "x": null,
                "y": null,
                "image_y": null,
                "image_x": null,
                "page": null,
                "comment_number": null,
                "comment_time": null,
                "referenced_content": "",
                "_version_vector": {
                  "workspace_id": 9012646112,
                  "object_type": "comment",
                  "object_id": "90120092219481",
                  "vector": [
                    {
                      "master_id": 16,
                      "version": 1735564715917000,
                      "deleted": false
                    }
                  ]
                },
                "comment_type": null,
                "date_updated": null,
                "root_parent_id": "86978gr3x",
                "root_parent_type": 1,
                "page_id": null,
                "page_name": null,
                "view_id": null,
                "view_name": null,
                "team": null,
                "view_parent_id": null,
                "view_parent_type": null,
                "view_parent_avatar_source": null,
                "view_parent_avatar_value": null,
                "view_parent_avatar_key": null,
                "view_parent_color": null,
                "view_type": null,
                "user": {
                  "id": 81321313,
                  "username": "Guilherme Reis",
                  "email": "imperador@dinastia.uk",
                  "color": "",
                  "initials": "GR",
                  "profilePicture": null
                },
                "new_thread_count": 0,
                "new_mentioned_thread_count": 0,
                "email_attachments": [],
                "threaded_users": [],
                "threaded_replies": 0,
                "threaded_assignees": 0,
                "threaded_assignees_members": [],
                "threaded_unresolved_count": 0,
                "thread_followers": [
                  {
                    "id": 81321313,
                    "username": "Guilherme Reis",
                    "email": "imperador@dinastia.uk",
                    "color": "",
                    "initials": "GR",
                    "profilePicture": null
                  }
                ],
                "group_thread_followers": [],
                "reactions": [],
                "emails": []
              }
            }
          ],
          "task_id": "86978gr3x",
          "webhook_id": "337f494b-5dfc-4951-ba49-fc82e1837718"
        }
      }
    ]
  },
  "versionId": "a0dfcb74-3fec-4bef-a318-c8acaee90c86",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-01-24T02:31:54.676Z",
      "updatedAt": "2025-01-24T02:31:54.676Z",
      "id": "F82vGSzF9g93J7st",
      "name": "Ofir"
    }
  ]
}