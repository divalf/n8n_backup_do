{
  "createdAt": "2025-01-07T01:57:32.334Z",
  "updatedAt": "2025-01-07T01:59:37.452Z",
  "id": "i71hncowXPZTTJK3",
  "name": "Imobiliaria - ATG",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "94746291-c0f3-44f3-b635-1fe696d7d74e",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d8f1b0e9-914d-4b83-8fda-6f5e8332c4e3",
      "name": "Form Me",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://seuendpoint/message/sendText/instancia\n\nsua URL será mais ou menos assim: \n\nhttps://atria.com/message/sendText/TESTE\n\n\n",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sua chave API"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $item(\"0\").$node[\"Webhook1\"].json[\"body\"][\"data\"][\"key\"][\"remoteJid\"] }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "eb6acfd1-e51b-4766-ba6b-36ac98deb734",
      "name": "Envia Mensagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3840,
        320
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}"
      },
      "id": "e1ab4464-1ed9-4f40-89a4-903f81472b50",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4040,
        320
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9e6724ed-aacb-44e0-a5a8-64f302d15623",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2560,
        340
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}",
        "options": {}
      },
      "id": "93b92e44-d289-4c06-ab3d-a97dfc17e0b9",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2220,
        340
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}",
        "options": {}
      },
      "id": "bc62fda2-8a72-419e-869d-0c62abb0abcd",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1860,
        340
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.body.data.key.remoteJid }}",
        "messageData": "={{ $json.body.data.message.conversation }}",
        "tail": true
      },
      "id": "4a74a0ba-70ff-4969-822d-19dad64893e4",
      "name": "Text Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1620,
        320
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.body.data.key.remoteJid }}",
        "messageData": "={{ $item(\"0\").$node[\"Webhook1\"].json[\"body\"][\"data\"][\"message\"][\"speechToText\"] }}",
        "tail": true
      },
      "id": "08517694-fddf-4368-9d67-d014bd18a2d0",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1620,
        520
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "86c69055-482d-491a-909b-c3f264962003",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2380,
        340
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "576ecd70-8023-4e2a-a210-d030a365bbd6",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2040,
        340
      ],
      "webhookId": "6f130bc2-7de0-4353-b6d0-653f7c7e6623"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}",
        "contextWindowLength": 15
      },
      "id": "bc0ac5cb-cae0-4089-9389-26101299ea08",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        3420,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "41b2fc8e-971c-4fdf-8ff6-79de576ed7c2",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2740,
        320
      ]
    },
    {
      "parameters": {
        "name": "encaminhar_casa",
        "description": "=Chame essa ferramenta quando você ja tiver todas informações do cliente.Nome, contato, bairro, cidade, quartos e garagem. \n\nPor exemplo: [nome] = Nome do cliente\n[contato] = contato do cliente\n[bairro] = bairro que o cliente deseja ver",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "eclgdtwu75msxc66"
        },
        "fields": {
          "values": [
            {
              "name": "evento",
              "stringValue": "encaminhar_casa"
            },
            {
              "name": "Remotejid",
              "stringValue": "={{ $('Edit Fields9').item.json.body.data.key.remoteJid }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"nome\": \"nome do usuario\",\n    \"contato\": \"contato do usuario\",\n    \"bairro\": \"bairro de preferencia\",\n    \"cidade\": \"bairro de preferencia\", \n    \"quartos\": \"Quantos quartos sao ideais\",\n    \"garagem\": \"Quantas garagens sao ideais\"\n}"
      },
      "id": "b39a83f2-57e7-4e04-a097-cb855c89de29",
      "name": "encaminhar_casa",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        3160,
        560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8c1fd282-35f7-4b44-92a0-cfb50711709b",
              "name": "query.nome",
              "value": "={{ $json.query.nome }}",
              "type": "string"
            },
            {
              "id": "0eec59a3-dc88-42f1-94dc-43935bc03adb",
              "name": "query.contato",
              "value": "={{ $json.query.contato }}",
              "type": "string"
            },
            {
              "id": "f079588a-a7ed-4144-aefb-f9fca8e27f3e",
              "name": "query.bairro",
              "value": "={{ $json.query.bairro }}",
              "type": "string"
            },
            {
              "id": "b82a489a-882b-4994-a591-9f20a72d4402",
              "name": "query.cidade",
              "value": "={{ $json.query.cidade }}",
              "type": "string"
            },
            {
              "id": "aec096e8-7a26-4636-9f8b-a203607ef0c5",
              "name": "query.quartos",
              "value": "={{ $json.query.quartos }}",
              "type": "string"
            },
            {
              "id": "df18477c-9259-439a-b4b6-8a12388ce36d",
              "name": "query.garagem",
              "value": "={{ $json.query.garagem }}",
              "type": "string"
            },
            {
              "id": "6eb48c4e-24d5-4c6c-b282-5af7105e25bf",
              "name": "Remotejid",
              "value": "={{ $json.Remotejid }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a39f398f-aec2-401f-a31b-e18ff4634423",
      "name": "dados_informados_cliente",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "634ad619-9810-4c9f-a65d-0317e6c0e352",
              "leftValue": "={{ $json.id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a0e70026-2bb5-4441-a158-b63040bcab42",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "casa_teste_n8n",
          "mode": "list",
          "cachedResultName": "casa_teste_n8n"
        },
        "where": {
          "values": [
            {
              "column": "bairro",
              "value": "={{ $('Execute Workflow Trigger').item.json.query.bairro }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f5993504-1aa2-4b49-8b3a-7ea39abe12e8",
      "name": "Postgres5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2080,
        1080
      ],
      "credentials": {
        "postgres": {
          "id": "UDj9j4FpSusP0Vje",
          "name": "Postgres - Dinastia"
        }
      }
    },
    {
      "parameters": {},
      "id": "f3ef0fe6-f7dc-4cc3-8413-ab69f85fdc9e",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2260,
        1080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b65b7e9-fe89-4ada-9619-96f009170743",
              "name": "id_casa",
              "value": "={{ $json.id_casa }}",
              "type": "number"
            },
            {
              "id": "bbb0542c-7097-4aff-8479-817540e7138a",
              "name": "bairro",
              "value": "={{ $json.bairro }}",
              "type": "string"
            },
            {
              "id": "09ee3cec-cbd6-47fd-9038-6c319b5aea4e",
              "name": "cidade",
              "value": "={{ $json.cidade }}",
              "type": "string"
            },
            {
              "id": "04e46b41-091d-4014-a848-bc265b6f9780",
              "name": "area_construcao",
              "value": "={{ $json.area_construcao }}",
              "type": "string"
            },
            {
              "id": "8a2dc96e-6426-47bc-86fd-e010c4ed5a83",
              "name": "area_terreno",
              "value": "={{ $json.area_terreno }}",
              "type": "string"
            },
            {
              "id": "6a1e0eb8-31bd-4f73-a571-05f148abec32",
              "name": "quartos",
              "value": "={{ $json.quartos }}",
              "type": "number"
            },
            {
              "id": "f788b456-b9f1-4843-b2b0-f3f29f95cc6d",
              "name": "suites",
              "value": "={{ $json.suites }}",
              "type": "number"
            },
            {
              "id": "705115f1-2d54-4396-9695-4bc77ef5b8fa",
              "name": "banheiros",
              "value": "={{ $json.banheiros }}",
              "type": "number"
            },
            {
              "id": "5f867a45-e352-46da-9ca0-c02b6902ad43",
              "name": "valor_casa",
              "value": "={{ $json.valor_casa }}",
              "type": "string"
            },
            {
              "id": "463aeaa0-7fd4-4416-89c1-7b83a8e0866c",
              "name": "descricao",
              "value": "={{ $json.descricao }}",
              "type": "string"
            },
            {
              "id": "da1369fc-2baa-4929-961f-542a2fb26201",
              "name": "url_casa",
              "value": "={{ $json.url_casa }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d848db09-f601-4849-9cfa-adac2dad7169",
      "name": "edita_campos_casas",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2480,
        1080
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "casas_enviadas_clientes",
          "mode": "list",
          "cachedResultName": "casas_enviadas_clientes"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "casa_enviada": "={{ $json.id_casa }}",
            "cliente_enviado": "={{ $('dados_informados_cliente').item.json.query.contato }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "casa_enviada",
              "displayName": "casa_enviada",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "cliente_enviado",
              "displayName": "cliente_enviado",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4497a605-c74a-4a06-ad8f-08bd27d78fd6",
      "name": "Postgres7",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2680,
        1080
      ],
      "credentials": {
        "postgres": {
          "id": "UDj9j4FpSusP0Vje",
          "name": "Postgres - Dinastia"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "959616bc-768f-4383-bf59-7bfc7956446b",
              "name": "id",
              "value": "={{ $json.casa_enviada }}",
              "type": "number"
            },
            {
              "id": "9219b032-d0d8-4376-a23e-7ca8c7afad03",
              "name": "cliente_enviado",
              "value": "={{ $json.cliente_enviado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "50293cd0-07bd-4cb0-8764-82dcd0af5fdb",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "02f42b3c-15d3-4f60-aef1-4b261b4a6ed7",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c55fe916-a1c0-48c4-80e6-dbdf1fee9bc9",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2900,
        1240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9e376e65-701a-4ed0-8d5b-bb1d86805666",
              "leftValue": "={{ $json.cidade }}",
              "rightValue": "={{ $json.cidade }}",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "8d2f9c92-fe15-4466-a080-d2914c36b96c",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3440,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0119ede2-8292-4eaa-9cdd-9004e461cf45",
              "leftValue": "={{ $json.bairro }}",
              "rightValue": "={{ $('dados_informados_cliente').first().json.query.bairro }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6670b18d-790d-4be0-984b-640a6f567c4b",
      "name": "Filter1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2540,
        1240
      ]
    },
    {
      "parameters": {},
      "id": "e7cc0db8-4b4e-4c11-bfd6-128b3dea5d0d",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3260,
        1180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "97246e61-deed-41b0-ae08-f2e2412aa4e5",
              "name": "id_casa",
              "value": "={{ $('Filter1').item.json.id_casa }}",
              "type": "number"
            },
            {
              "id": "34b8e484-bb1e-4181-8115-1f7d57b4fc5b",
              "name": "bairro",
              "value": "={{ $('Filter1').item.json.bairro }}",
              "type": "string"
            },
            {
              "id": "5e23b262-a8d6-41d3-8725-b05ac6d39f10",
              "name": "cidade",
              "value": "={{ $('Filter1').item.json.cidade }}",
              "type": "string"
            },
            {
              "id": "3a378354-293d-4fbd-a47e-f870e85c0325",
              "name": "area_construcao",
              "value": "={{ $('Filter1').item.json.area_construcao }}",
              "type": "string"
            },
            {
              "id": "1d896a5e-2931-44ad-9657-3846b606187c",
              "name": "area_terreno",
              "value": "={{ $('Filter1').item.json.area_terreno }}",
              "type": "string"
            },
            {
              "id": "8cc3d263-d2d8-4528-a29e-ab82eeb393c9",
              "name": "quartos",
              "value": "={{ $('Filter1').item.json.quartos }}",
              "type": "number"
            },
            {
              "id": "f0ed503b-287d-4070-ad72-af980c6c4bff",
              "name": "suites",
              "value": "={{ $('Filter1').item.json.suites }}",
              "type": "number"
            },
            {
              "id": "5ab91549-8e34-4d2b-9542-090a98bbb7fd",
              "name": "banheiros",
              "value": "={{ $('Filter1').item.json.banheiros }}",
              "type": "number"
            },
            {
              "id": "47e71914-14cf-479d-8d6a-45269c983e07",
              "name": "valor_casa",
              "value": "={{ $('Filter1').item.json.valor_casa }}",
              "type": "string"
            },
            {
              "id": "641f3763-8915-485c-b571-0ab642d2f43d",
              "name": "descricao",
              "value": "={{ $('Filter1').item.json.descricao }}",
              "type": "string"
            },
            {
              "id": "334a0f99-139b-44b2-be23-7f450af5d05a",
              "name": "url_casa",
              "value": "={{ $('Filter1').item.json.url_casa }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ada021b5-ac32-4ba9-ab91-a0fdaecdd7d9",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3080,
        1180
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "casas_enviadas_clientes",
          "mode": "list",
          "cachedResultName": "casas_enviadas_clientes"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "casa_enviada": "={{ $('Edit Fields1').item.json.id_casa }}",
            "cliente_enviado": "={{ $('dados_informados_cliente').item.json.query.contato}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "casa_enviada",
              "displayName": "casa_enviada",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "cliente_enviado",
              "displayName": "cliente_enviado",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "989ee435-7029-49d4-8a19-364d02bc044c",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3760,
        1120
      ],
      "credentials": {
        "postgres": {
          "id": "UDj9j4FpSusP0Vje",
          "name": "Postgres - Dinastia"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "casas_enviadas_clientes",
          "mode": "list",
          "cachedResultName": "casas_enviadas_clientes"
        },
        "where": {
          "values": [
            {
              "column": "casa_enviada",
              "condition": "IS NOT NULL"
            }
          ]
        },
        "options": {}
      },
      "id": "21d2f03f-3e40-4ae7-8b1e-848ec109d493",
      "name": "extrai_casas_nao_enviadas",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1200,
        1120
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "UDj9j4FpSusP0Vje",
          "name": "Postgres - Dinastia"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pega os dados do nó anterior com casas enviadas\nconst casasEnviadas = $('extrai_casas_nao_enviadas').all(); // Lista completa de casas enviadas\n\n// Obtém todas as casas disponíveis para envio\nconst todasCasas = $('mostrar_casa1').all(); // Lista completa de todas as casas\n\n// Verifica se os dados estão corretos\nif (!Array.isArray(casasEnviadas) || !Array.isArray(todasCasas)) {\n  throw new Error(\"Os dados recebidos não são arrays válidos.\");\n}\n\n// Mapeia as casas enviadas por cliente\nconst mapaCasasEnviadas = casasEnviadas.reduce((mapa, item) => {\n  const { casa_enviada, cliente_enviado } = item.json;\n  if (!mapa[cliente_enviado]) {\n    mapa[cliente_enviado] = new Set();\n  }\n  mapa[cliente_enviado].add(casa_enviada);\n  return mapa;\n}, {});\n\n// Remove duplicatas de `todasCasas` com base no `id_casa`\nconst casasUnicas = todasCasas.reduce((mapa, item) => {\n  if (!mapa.has(item.json.id_casa)) {\n    mapa.set(item.json.id_casa, item.json);\n  }\n  return mapa;\n}, new Map());\n\n// Filtra casas não enviadas por cliente\nconst casasNaoEnviadas = Array.from(casasUnicas.values()).filter((itemCasa) => {\n  const { id_casa, cliente_enviado } = itemCasa; // Ajuste os campos conforme o JSON real\n  return (\n    !mapaCasasEnviadas[cliente_enviado] || \n    !mapaCasasEnviadas[cliente_enviado].has(id_casa)\n  );\n});\n\n// Retorna o resultado no formato esperado pelo n8n\nreturn casasNaoEnviadas.map((casa) => {\n  return { json: casa }; // Cada item no formato { json: { ... } }\n});\n"
      },
      "id": "364c3ed6-bec2-4ad0-9473-a3f769bcaa68",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2200,
        1240
      ],
      "executeOnce": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "casa_teste_n8n",
          "mode": "list",
          "cachedResultName": "casa_teste_n8n"
        },
        "where": {
          "values": [
            {
              "column": "id_casa",
              "condition": "!=",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "78b1b670-099d-4314-a1da-133ba02c5767",
      "name": "mostrar_casa1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2060,
        1240
      ],
      "executeOnce": false,
      "credentials": {
        "postgres": {
          "id": "UDj9j4FpSusP0Vje",
          "name": "Postgres - Dinastia"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4c5366df-8f44-4dcf-b398-d69f164b26da",
              "leftValue": "={{ $json.query.contato }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9ec4589f-d768-4286-84e7-9b19b95db897",
      "name": "verifica_contato",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        820,
        1140
      ]
    },
    {
      "parameters": {},
      "id": "f0147eac-2d76-46f6-9c72-dfb7068b072d",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        600,
        1140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd6a100c-b64d-429c-9675-7471f322ab07",
              "name": "response",
              "value": "=Id casa: {{ $json.id_casa }}\nBairro:{{ $json.bairro }}\nCidade:{{ $json.cidade }}\nArea construção:{{ $json.area_construcao }}\nArea terreno:{{ $json.area_terreno }}\nquartos{{ $json.quartos }}\nsuites{{ $json.suites }}\nbanheiros:{{ $json.banheiros }}\nValor casa:{{ $json.valor_casa }}\ndescricao: {{ $json.descricao }}\nurl_casa:{{ $json.url_casa }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "44c467ec-f615-458c-93fb-48706d2b23fb",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3620,
        1120
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b76f2e84-14bd-422e-a325-f236092edb53",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3620,
        1280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9625c9bf-0e94-4137-8103-224ec3c93cc4",
              "name": "response",
              "value": "Ja mostramos todas casas disponiveis nesse bairro, deseja ver alguma outra?",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2abee2cc-f0af-4201-8fe0-cd200ee5ca41",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3060,
        1380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2a885f81-225b-479c-9570-ae226fa6983c",
              "name": "response",
              "value": "Questione o contato do cliente",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "68cbf287-2ce3-452d-bb01-6a4cce5c1463",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1220,
        1320
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "71aed0c2-8ad9-43d8-ac9c-ccf7cff4b13e",
              "name": "body.data.key.remoteJid",
              "value": "={{ $('Form Me').item.json.body.data.key.remoteJid }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "703046e2-aafe-4d4c-b63d-2187c3500fa0",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2960,
        320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7904f30d-c0ad-4ad6-8830-69e2f6bdc0b7",
              "leftValue": "={{ $('verifica_contato').item.json.query.contato }}",
              "rightValue": "={{ $('extrai_casas_nao_enviadas').item.json.cliente_enviado }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f426f92e-d6c5-4b5d-a208-c0c4ee000ec9",
      "name": "filtrar_cliente",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1820,
        1220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Pega os dados do nó anterior com casas não enviadas\nconst casasNaoEnviadas = $('Code').all(); // Resultado do código anterior\n\n// Pega os dados do nó com casas enviadas\nconst casasEnviadas = $('extrai_casas_nao_enviadas').all(); // Casas já enviadas\n\n// Verifica se os dados estão corretos\nif (!Array.isArray(casasNaoEnviadas) || !Array.isArray(casasEnviadas)) {\n  throw new Error(\"Os dados recebidos não são arrays válidos.\");\n}\n\n// Cria um conjunto com os IDs das casas enviadas para facilitar a filtragem\nconst idsCasasEnviadas = new Set(\n  casasEnviadas.map((item) => item.json.casa_enviada)\n);\n\n// Filtra as casas não enviadas, excluindo as que já foram enviadas\nconst casasFiltradas = casasNaoEnviadas.filter((item) => {\n  const { id_casa } = item.json;\n  return !idsCasasEnviadas.has(id_casa); // Exclui as casas enviadas\n});\n\n// Retorna o resultado no formato esperado pelo n8n\nreturn casasFiltradas.map((casa) => {\n  return { json: casa.json }; // Cada item no formato { json: { ... } }\n});\n"
      },
      "id": "afe34c10-7960-41a0-9842-86f570d1a15d",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        1240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd6a100c-b64d-429c-9675-7471f322ab07",
              "name": "response",
              "value": "=Id casa: {{ $('edita_campos_casas').item.json.id_casa }}\nBairro:{{ $('edita_campos_casas').item.json.bairro }}\nCidade:{{ $('edita_campos_casas').item.json.cidade }}\nArea construção:{{ $('edita_campos_casas').item.json.area_construcao}}\nArea terreno:{{ $('edita_campos_casas').item.json.area_terreno }}\nquartos{{ $('edita_campos_casas').item.json.quartos }}\nsuites{{ $('edita_campos_casas').item.json.suites }}\nbanheiros:{{ $('edita_campos_casas').item.json.banheiros }}\nValor casa:{{ $('edita_campos_casas').item.json.valor_casa }}\ndescricao: {{ $('edita_campos_casas').item.json.descricao }}\nurl_casa:{{ $('edita_campos_casas').item.json.url_casa }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ad375bf1-968c-469f-be84-d0b07c0b0abe",
      "name": "responder_cliente_casa",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2900,
        1060
      ]
    },
    {
      "parameters": {},
      "id": "ffc0a2c3-c91c-429c-968d-ad1252a0251d",
      "name": "Limit2",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2720,
        1240
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "964e273c-eef9-4e45-8912-84b6e8e6d88f",
        "options": {}
      },
      "id": "a19beb8e-eadd-4b29-a817-ca8078543a1d",
      "name": "Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        880,
        340
      ],
      "webhookId": "964e273c-eef9-4e45-8912-84b6e8e6d88f"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60065893-74f7-4b64-bc1a-d891202efa78",
                    "leftValue": "={{ $('Webhook1').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $('Webhook1').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook1').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            }
          ]
        },
        "options": {}
      },
      "id": "b871a938-e938-4d03-a107-c8c7c153285b",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1360,
        320
      ]
    },
    {
      "parameters": {
        "content": "AGENTE RESPONSAVÉL POR FAZER TODA PARTE DE CONVERSAÇÃO E ARMAZENAR SUA MEMORIA, COM ID. \n\nENTÃO CADA USUARIO TERÁ SUA MEMORIA. \n\nPREENCHA AS INFORMAÇÕES NECESSARIAS: \nOPENAI, OU SE PREFERIR OUTRA LLM\nPOSTGRES OU SE PREFERIR OUTRO BANCO DE DADOS.\n\nEVOLUTION API OU SE PREFERIR Z.API",
        "height": 728.7596130886313,
        "width": 3568.4453413848805
      },
      "id": "099cc286-a79f-4646-8306-cba2a022af7b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        20
      ]
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_CMl9CaGksrHSVKPFURrN3dZI",
          "mode": "list",
          "cachedResultName": "Vendedor Raiz"
        },
        "prompt": "define",
        "text": "={{ $item(\"0\").$node[\"Code1\"].json[\"mensagem_completa\"] }}",
        "options": {}
      },
      "id": "bdeca033-4d74-4fad-b7d2-6d00919d07ec",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.5,
      "position": [
        3200,
        320
      ],
      "credentials": {
        "openAiApi": {
          "id": "JkiMZM8MKW13d05b",
          "name": "OpenAi - Uso Geral 3"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://seuendpoint/message/sendText/instancia\n\nsua URL será mais ou menos assim: \n\nhttps://atria.com/message/sendText/TESTE\n\n\n",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sua chave API"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $item(\"0\").$node[\"Webhook1\"].json[\"body\"][\"data\"][\"key\"][\"remoteJid\"] }}"
            },
            {
              "name": "text",
              "value": "=Não entendemos imagens, encaminhe uma mensagem de texto"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "2b2d942a-884c-4756-9f55-6c6dfe068ad9",
      "name": "Envia Mensagem2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1620,
        160
      ]
    },
    {
      "parameters": {
        "content": "ESSE PROCESSO DO FLUXO É RESPONSAVÉL POR ENCAMINHAR A CASA PARA O CLIENTE. \nAJUSTE CONFORME A SUA NECESSIDADE, ESTA POR PADRÃO BUSCAR SEMPRE POR BAIRRO. AJUSTE CONFORME SUA NECESSIDADE. \n\nMAS ESSE FLUXO ENVIA A CASA PARA O CLIENTE, A PARTIR DE UM BANCO DE DADOS DO POSTGRESS, SE O SEU CLIENTE POSSUIR UM CRM, FAÇA A INTEGRAÇÃO, SERÁ MAIS FACIL AINDA!\n\nQUALQUER DUVIDA, PODE NOS CONSULTAR NA COMUNIDADE!\n\nESSA LOGICA FAZ COM QUE CADA VEZ ENVIADA A CASA PARA O CLIENTE ELE PREENCHE O BANCO DE DADOS, INFORMANDO QUE TAL CASA JA FOI ENVIADA PARA TAL CLIENTE, PARA QUE NÃO SEJA ENVIADA A MESMA CASA PARA O CLIENTE.\n\nSE ISSO FIZER SENTIDO PARA VOCÊ, PERMANEÇA COM O FLUXO. ",
        "height": 588.5723845104478,
        "width": 3516.3757993415547
      },
      "id": "ba8c7ad3-46ae-4a75-b077-2ab73d1fd0fa",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        580,
        900
      ]
    },
    {
      "parameters": {
        "content": "SIGA NOS NO INSTAGRAM - \n\nATRIA GROWTH\n\nAGREDECEMOS, QUAISQUER DUVIDA NOS CONTATE PELA COMUNIDADE.",
        "height": 1600,
        "width": 495
      },
      "id": "f604f28d-36b1-4f24-b250-08cf6faf93a1",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    }
  ],
  "connections": {
    "Form Me": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia Mensagem": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "OpenAI",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "encaminhar_casa": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "dados_informados_cliente": {
      "main": [
        [
          {
            "node": "extrai_casas_nao_enviadas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "filtrar_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "edita_campos_casas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edita_campos_casas": {
      "main": [
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "responder_cliente_casa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extrai_casas_nao_enviadas": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mostrar_casa1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verifica_contato": {
      "main": [
        [
          {
            "node": "dados_informados_cliente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "verifica_contato",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filtrar_cliente": {
      "main": [
        [
          {
            "node": "mostrar_casa1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Form Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Envia Mensagem2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Envia Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "query": {
            "nome": "Pedro",
            "contato": "16992253558",
            "bairro": "Villa Toscana",
            "cidade": "Franca",
            "quartos": "4",
            "garagem": "2"
          },
          "evento": "encaminhar_casa",
          "Remotejid": "5516992253558@s.whatsapp.net"
        }
      }
    ],
    "Webhook1": [
      {
        "json": {
          "headers": {
            "host": "webhook.atriagrowth.com",
            "user-agent": "axios/1.7.7",
            "content-length": "986",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "10.0.0.2",
            "x-forwarded-host": "webhook.atriagrowth.com",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "2761970a7bb8",
            "x-real-ip": "10.0.0.2"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "vendedor_imobiliaria_murall",
            "data": {
              "key": {
                "remoteJid": "5516997920229@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB02AE22D0476CBDB5F4D"
              },
              "pushName": "Atria Growth - Soluções Personalizadas",
              "message": {
                "conversation": "oi",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "Bh2cj7VEge9/GA==",
                    "senderTimestamp": "1733229884",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "VlJudJqKgU+17Q==",
                    "recipientTimestamp": "1733261176"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "Qn+O4hYRNqxv87TYlx748zLwkhjPDdbP3LxoihrCAYc="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1733417626,
              "instanceId": "f819fa63-df84-4ab2-aa3a-a0c0e0624d03",
              "source": "web"
            },
            "destination": "https://webhook.atriagrowth.com/webhook/964e273c-eef9-4e45-8912-84b6e8e6d88f",
            "date_time": "2024-12-05T13:53:46.596Z",
            "sender": "5516992718169@s.whatsapp.net",
            "server_url": "https://evolution.atriagrowth.com",
            "apikey": "3E5DD04E7B65-423F-A02C-7D613F098DFB"
          },
          "webhookUrl": "https://webhook.atriagrowth.com/webhook/964e273c-eef9-4e45-8912-84b6e8e6d88f",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "26d8480c-4c6b-47be-92ea-5782a0a93cc6",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-01-06T18:26:23.575Z",
      "updatedAt": "2025-01-06T18:26:23.575Z",
      "id": "22rkfDXKnS0Jbxgi",
      "name": "ATG"
    }
  ]
}