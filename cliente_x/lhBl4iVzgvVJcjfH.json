{
  "createdAt": "2025-01-11T03:19:09.906Z",
  "updatedAt": "2025-01-11T23:58:29.531Z",
  "id": "lhBl4iVzgvVJcjfH",
  "name": "Agendamento Cal.com",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3140,
        1000
      ],
      "id": "db0c42a1-1bdb-4e0c-8262-0ff89eed55cf",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "JkiMZM8MKW13d05b",
          "name": "OpenAi - Uso Geral 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "69918e5c-6cbf-44a1-a0a8-e6bdd9646860",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "d5f56632-01ff-492a-98f1-c4f4dd7cc601",
              "name": "session_id",
              "value": "={{ $('SetFieldsBasic').item.json.ConversationID }}",
              "type": "string"
            },
            {
              "id": "85351078-014d-476b-a79d-1b9cf0d604d9",
              "name": "date_time",
              "value": "={{ $now.format('yyyy-MM-dd')}}",
              "type": "string"
            },
            {
              "id": "142e0a72-710c-4497-9dae-d6c6bc9511e8",
              "name": "week_day",
              "value": "={{ $today.weekdayLong}}",
              "type": "string"
            },
            {
              "id": "17dd323e-622c-48d5-b870-86ed37aa7067",
              "name": "horario",
              "value": "={{ $now.format('HH:mm:ss')}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3100,
        660
      ],
      "id": "a8a75224-060c-448f-a8ce-ef555a622f4d",
      "name": "Config"
    },
    {
      "parameters": {
        "name": "list_calls_meeting",
        "description": "Lista todas as reuniões agendada no cal.com no período especificado",
        "workflowId": {
          "__rl": true,
          "value": "xjVUczTmcJy1wnLI",
          "mode": "list",
          "cachedResultName": "cal_com_list_bookings"
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"startTime\": \"2024-12-19T19:37:19.633Z\",\n  \"endTime\":\"2024-12-26T19:37:19.634Z\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        3740,
        1000
      ],
      "id": "5444ea80-8d0a-4e10-88c8-15aa8b78036c",
      "name": "list_calls_meeting"
    },
    {
      "parameters": {
        "name": "get_horarios",
        "description": "Obtém os horários disponíveis para eventos do cal.com (slots) ",
        "workflowId": {
          "__rl": true,
          "value": "rvZdbuz1riabB1ZT",
          "mode": "list",
          "cachedResultName": "cal_com_get_horarios"
        },
        "jsonSchemaExample": "{\n\t\"startTime\": \"2024-04-13T11:00:00+04:00\",\n  \"endTime\":\"2024-04-13T12:00:00+04:00\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        3600,
        1000
      ],
      "id": "c939150b-ae11-4152-8f3d-c5dad60aab64",
      "name": "get_horarios"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=### Configuração do Agente:\n- Você é a Natália, uma Agente Virtual de atendimento da Clínica Nakamura, conectada à API do **Cal.com**. \n- Use fluxos personalizados para interagir com a API do Cal.com de forma eficiente. \n- O seu objetivo é qualificar o usuário e então direcioná-lo para um agendamento de consulta ou a um atendente humano.\n- Nunca dê respostas com mais de 500 caracteres.\n- Nunca dê qualquer tipo de diagnóstico, deixe sempre as opções para serem definidas pelo Dr. Marcelino Nakamura.\n- Deixe claro que o Dr. Marcelino Nakamura trabalha apenas com a técnica Sleeve (Gastrectomia Vertical).\n\n## Não use markdown das respostas nem caracteres especiais como '#','*', '\\n' ou '-'\n\n- No inicio da conversa seja educada e informe o seu nome: exemplo: \"Olá, eu sou a Natália, Assistente Virtual da Clínica Nakamura. Em que posso ajudar?\"\n\n- Responda apenas o que o usuário perguntar\n\n## Caso o cliente deseja agendar uma data, pergunte:\n  - o nome do cliente\n  - o seu melhor e-mail\n-  Utilize o telefone contido no contexto da conversa para criar o agendamento   \n\n### Contexto do Usuário:\n- **Data e Hora Atuais:**  \n  {{ $json.date_time }} {{ $json.horario }}\n- **Dia da Semana:**  \n  {{ $json.week_day }}\n\n- **Telefone do cliente**\n   {{ $('SetFieldsBasic').item.json.phone }}\n\n- **Nome do cliente (que está no Whatsapp)**\n   {{ $('SetFieldsBasic').item.json.user_from }}\n\n---\n\n### Suas Tarefas de Agendamento:\n1. **Consultar horários livres na agenda do Cal.com, somente se o usuário solicitar ou concordar com o agendamento de consulta**\n   \n   - Você deve respeitar obrigatoriamente os horários de funcionamento pré-definidos abaixo:\n     . Segunda-feira: 14:00H às 18H\n     . Terça-feira: 14:00H às 18H\n     . Quarta-feira: 09:00H às 18H\n     . Quinta-feira: 09:00H às 18H\n     . Sexta-feira: 09:00H às 18H\n     . Sábado: Fechado\n     . Domingo: Fechado\n\n   - Liste apenas horários de 3 dias úteis, os de hoje caso ainda esteja dentro do horário de funcionamento e os outros 2 dias úteis com horários disponíveis.\n\n   - Não mencione os dias qem que não há horários disponíveis, exemplo: \"temos as 15 horas amanhã e 15 e 18 na terça\".\n\n   - Não mencione o ano pois os agendamentos são sempre para o mesmo ano, com exceção do mês de dezembro, que pode aceitar agendamentos para o próximo ano.\n\n   - Utilize o fluxo personalizado `get_horarios` para retornar os horários disponíveis.\n\n2. **Listar agendamentos marcados**  \n   Use o fluxo **list_call_meeting**, passando dois parâmetros obrigatórios:\n   - `startTime`: Data de início no formato ISO 8601, ex.: `2024-12-02T18:00:00.000Z`.  \n  \n\n3. **Criar novos agendamentos**  \n   Crie agendamentos em horários livres na agenda do Cal.com através do fluxo personalizado `make_call_meeting` envie os seguintes parâmentros:\n - nome   (nome do cliente)\n - email  (e-mail do cliente)\n - phone (telefone do cliente)\n - startTime  Dia e horário da consulta no formato ISO 8601, ex: '2024-12-02T18:00:00.000Z'\n - Nunca crie um agendamento sem os dados do cliente (nome, email, telefone)\n\n4. **Informar agendamentos para o cliente**\n Consulte a sua lista de agendamentos de todos os clientes e veja se tem algum agendamento para  cliente com o telefone informado atreavés do fluxo personalisado 'cal.com-list_bookings', loclaize o ID do agendamento para um possível cancelamento.\n\n5.  **Cancelar um agendamento** \n   Cancelar agendementos do cliente no Cal.com através do fluxo personalizado `delete_call_meeting`.\n  \nenvie os seguintes parâmentros:\n  booking_id - ID do agendamento\n---\n\n### Resposta ao Cliente:\nCom base na mensagem do cliente:  \n{{ $json.text }}  \n\n- **Ofereça informações precisas** baseadas nos dados recebidos.  \n- Certifique-se de que os detalhes sejam apresentados de forma clara e objetiva.\n\n---\n\n### Recomendações:\n1. Certifique-se de validar os dados recebidos para evitar erros de processamento.  \n2. Formate as respostas ao usuário de forma amigável e organizada.  \n3. Use mensagens claras para confirmar ações, como agendamentos criados ou informações sobre horários disponíveis.",
        "options": {
          "maxIterations": 100
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3440,
        660
      ],
      "id": "addf7bbb-ad52-4054-aa79-892a938c1158",
      "name": "Agendamento AI"
    },
    {
      "parameters": {
        "name": "make_call_meeting",
        "description": "Função responsável por criar um agendamento, recebe os parâmetros para agendar a reunião pelo cal.com",
        "workflowId": {
          "__rl": true,
          "value": "1wud53cfO7psgAA9",
          "mode": "id"
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"nome\": \"João da Silva\",\n  \"phone\": \"5586981612761\",\n  \"email\": \"ciente@gmail.com\",\n  \"startTime\": \"2024-12-21T15:00:00.000Z\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        3900,
        1000
      ],
      "id": "04b3d68a-4b80-44f4-8aaf-029928526b48",
      "name": "make_call_meeting"
    },
    {
      "parameters": {
        "name": "delete_call_meeting",
        "description": "Função responsável por cancelar um agendamento no cal.com",
        "workflowId": {
          "__rl": true,
          "value": "a86tqANvfZRT2uPL",
          "mode": "list",
          "cachedResultName": "cal.com-delete_call_meeting"
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"booking_id\": \"4955725\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        4060,
        1000
      ],
      "id": "c647efed-0ab2-4c85-907d-bdb4fd6ebda0",
      "name": "delete_call_meeting"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('SetFieldsBasic').item.json.evolutiom_api_url }}/chat/getBase64FromMediaMessage/{{ $('SetFieldsBasic').item.json.evolution_instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('SetFieldsBasic').item.json.evolution_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('SetFieldsBasic').item.json.MessageID }}"
            },
            {
              "name": "convertToMp4",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "9ff5395d-54d0-4188-a368-82fe52232700",
      "name": "GetAudio-HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        660
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "# Debounce",
        "height": 409,
        "width": 2244,
        "color": 3
      },
      "id": "f6abc596-ad54-449c-8735-ea2695ee6945",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        920,
        1680
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "audio",
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "id": "27f762c0-62dc-4ef9-8102-19d4367a8f8b",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2280,
        660
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2fce443-aed1-46fe-b0ba-fca2170c6493",
              "name": "text",
              "value": "={{ $json.messages.join(' ') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b72cd903-ca69-4815-80b6-cdf502c33ea4",
      "name": "AgruparMSGs",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2700,
        1720
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "764a7696-fb30-452e-bf58-1b2783ff1768",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1440,
        1740
      ],
      "webhookId": "46c89449-62eb-4487-b74c-88e458b4b716"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=msgs-{{ $('SetFieldsBasic').item.json.phone }}",
        "messageData": "={{ $json.text }}"
      },
      "id": "0ff5cb98-a57e-4c2b-a29d-4148f5b42965",
      "name": "RedisPushMsgs",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1200,
        1740
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "558681612061@s.whatsapp.net"
      },
      "id": "e1e16a7f-bead-4002-8c12-ea7824c5169e",
      "name": "RedisClearMSGs1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1700,
        1900
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "msgs-558688580503",
        "messageData": "teste 003"
      },
      "id": "defe2e12-3d27-4a12-885e-a1778bf287ed",
      "name": "GravaConversationID1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1440,
        1900
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "msgs-558688580503",
        "key": "=msgs-558681612061",
        "options": {}
      },
      "id": "1d09affb-8435-468a-9f0e-eac40c8d6932",
      "name": "BuscaConversationID1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2080,
        1900
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=msgs-{{ $('SetFieldsBasic').item.json.phone }}"
      },
      "id": "e2b4cf4c-2a20-46e5-afaa-679bf0d9cbe3",
      "name": "RedisClearMSGs",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2880,
        1720
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=messages",
        "key": "=msgs-{{ $('SetFieldsBasic').item.json.phone }}",
        "options": {}
      },
      "id": "8376cb10-66d7-4bfb-8235-38047449c10d",
      "name": "ListaMsg-Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1700,
        1740
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "558681612061@s.whatsapp.net"
      },
      "id": "f15a7cbf-705a-4336-97eb-9546eb9ba9ce",
      "name": "ApagarConversationID",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1200,
        1900
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f6cb6722-aacd-48de-b93a-8e3726bbabe5",
              "name": "text",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation || \" \" }}",
              "type": "string"
            },
            {
              "id": "2199088e-08dc-4bef-9dd1-a739574fe2a6",
              "name": "type",
              "value": "={{ $('Webhook').item.json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "616e1a4d-f22f-4125-90d8-8c7b761013f1",
              "name": "phone_number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "53a69954-72c9-4bb9-8f1a-2bf7f26d70d4",
              "name": "ConversationID",
              "value": "={{ $json.body.sender }}",
              "type": "string"
            },
            {
              "id": "c726f6bf-f026-4615-9a3d-840c537df07e",
              "name": "user_from",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "6645fa38-1d52-4d65-ab2b-004c337b0776",
              "name": "evolution_instance",
              "value": "={{ $('Webhook').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "15da7191-efbe-427b-b376-bd7a06997b10",
              "name": "remoteJid",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "b94afc26-ac84-474a-b12e-af59a9104c69",
              "name": "evolutiom_api_url",
              "value": "={{ $('Webhook').item.json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "27a5a32b-b8d7-4b08-8e41-385eed83fe62",
              "name": "evolution_api_key",
              "value": "={{ $('Webhook').item.json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "77d7d584-332b-44ea-96be-e941762f90b4",
              "name": "evolution_chatID",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "4e12e180-8336-4cce-80f4-b542ef4f6631",
              "name": "url_audio_evolution_api",
              "value": "={{ $('Webhook').item.json.body.data?.message.audioMessage?.url || \" \"}}",
              "type": "string"
            },
            {
              "id": "5cc25668-f3e6-45b9-ac44-39659298ecab",
              "name": "MessageID",
              "value": "={{ $('Webhook').item.json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "7fbaa3a2-19fc-42b4-ba8f-f21ce01e0a18",
              "name": "EvolutionApi_URL",
              "value": "={{ $('Webhook').item.json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "823b135b-e45f-437c-8531-b4221d15b4a5",
              "name": "phone",
              "value": "={{ $('Webhook')?.item?.json?.body?.data?.key?.remoteJid?.replace(\"@s.whatsapp.net\",\"\") }}",
              "type": "string"
            },
            {
              "id": "bea94f83-af9e-425a-8856-f01cb395d51f",
              "name": "extendedTextMessage",
              "value": "={{ $('Webhook').item.json.body?.data?.message?.extendedTextMessage?.text || \"\" }}",
              "type": "string"
            },
            {
              "id": "9b931868-30af-4d71-8599-4ee6fbb4a2f3",
              "name": "ephemeralMessage",
              "value": "={{ $('Webhook').item.json.body.data?.message?.ephemeralMessage?.message?.extendedTextMessage?.text || \"\" }}",
              "type": "string"
            },
            {
              "id": "ccad20b5-8a59-407e-8725-c3515f7d4db5",
              "name": "ElevenLabsAPI-KEY",
              "value": "--MUDAR----",
              "type": "string"
            },
            {
              "id": "c1931e9a-787f-4af2-8570-8021fdd27fbf",
              "name": "EnableElevenLabsAPI",
              "value": "false",
              "type": "string"
            },
            {
              "id": "07db2657-707c-4003-aaa7-4be613f1599e",
              "name": "ElevenLabsVozID",
              "value": "vibfi5nlk3hs8Mtvf9Oy",
              "type": "string"
            },
            {
              "id": "3469b9eb-2516-4c57-8971-0e85602304c5",
              "name": "ElevenLabsVozIDGratis-01",
              "value": "EXAVITQu4vr4xnSDxMaL",
              "type": "string"
            },
            {
              "id": "638a9fe8-5f0b-40ca-851d-29b6b10aff0d",
              "name": "ElevenLabsVozIDGratis-02",
              "value": "FGY2WhTYpPnrIDTdsKH5",
              "type": "string"
            },
            {
              "id": "ec371540-12d0-4108-b7d8-57e0ab943bfe",
              "name": "ElevenLabsVozIDGratis-03",
              "value": "Xb7hH8MSUJpSbSDYk0k2",
              "type": "string"
            },
            {
              "id": "0c6a26d8-a0a4-43fa-8abe-00483b5e044c",
              "name": "fromMe",
              "value": "={{ $('Webhook').item.json.body.data.key.fromMe }}",
              "type": "string"
            },
            {
              "id": "973bcbb6-a4b1-4299-b46e-efa604cf6edd",
              "name": "savechats_url",
              "value": "---MUDAR---",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "54e89a10-bc20-4a3e-afe6-0a214c12e438",
      "name": "SetFieldsBasic",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        880
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "df119838-c757-4618-a3c8-2e1aede4115b",
              "name": "text",
              "value": "={{ $('SetFieldsBasic').item.json.extendedTextMessage }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1669394b-3d4c-4c67-a146-f2648e3805df",
      "name": "SetTextExtendedTextMessage",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        1320
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "df119838-c757-4618-a3c8-2e1aede4115b",
              "name": "text",
              "value": "={{ $('SetFieldsBasic').item.json.ephemeralMessage }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "36ce45c4-2d5f-4239-b4c1-3132ab522581",
      "name": "SetEphemeralMessage",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        1100
      ]
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "id": "a418a6cb-8b9a-44da-b2fc-5c70ec927f19",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2640,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ec39573f-f92a-4fe4-a832-0a137de8e7d0",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.messages?.last() }}",
              "rightValue": "={{  $('RedisPushMsgs').item.json.text }}"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c0170a7-4c22-4f75-940a-d34e3eca64f1",
      "name": "Should Continue?",
      "type": "n8n-nodes-base.if",
      "position": [
        2080,
        1740
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "1b0f6682-66f5-4634-b709-64b5749ac928",
      "name": "FimFluxo",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2680,
        1920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6ace55bc-45c2-4cfe-b8a7-64a409c44b47",
              "leftValue": "={{ $json.body.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4a20f760-7185-4941-8722-180bd634a61e",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1260,
        620
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.fromMe }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "216b830c-ed10-4839-b6f0-29589acea816",
                    "leftValue": "={{ $json.fromMe }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "700407bb-3efc-4c64-90fb-03bba84c73a5",
      "name": "FromMe-Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1320,
        880
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=traplist-{{ $json.remoteJid }}"
      },
      "id": "9196743e-5700-454f-9b1c-41bd96bc7511",
      "name": "RemoveFromTrapList",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1300,
        1380
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=traplist-{{$('Webhook').item.json.body.data.key.remoteJid }}",
        "messageData": "true"
      },
      "id": "cafd81fb-e719-454e-b711-faa6eaaeed0d",
      "name": "AddTrapList",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1300,
        1200
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('SetFieldsBasic').item.json.evolutiom_api_url }}/message/sendText/{{ $('SetFieldsBasic').item.json.evolution_instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('SetFieldsBasic').item.json.evolution_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{$('SetFieldsBasic').item.json.phone}}"
            },
            {
              "name": "text",
              "value": "=Chatbot parado para o número : {{$('RemoveCliente').item.json.phone }}"
            },
            {
              "name": "key,fromMe",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "id": "22a3173c-fbbe-4e2e-a4bb-80259e3c1793",
      "name": "Evolution API - HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        1200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('SetFieldsBasic').item.json.evolutiom_api_url }}/message/sendText/{{ $('SetFieldsBasic').item.json.evolution_instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('SetFieldsBasic').item.json.evolution_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{$('SetFieldsBasic').item.json.phone}}"
            },
            {
              "name": "text",
              "value": "=Chatbot inciado para o número : {{$('RemoveCliente').item.json.phone }}"
            },
            {
              "name": "key,fromMe",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "id": "d389a407-377f-44df-8d35-4bd9a65a3b2d",
      "name": "Evolution API - HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        1380
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "trap-list",
        "key": "=traplist-{{$('SetFieldsBasic').item.json.remoteJid }}",
        "options": {}
      },
      "id": "aef5fd2c-50dc-4cfb-b5fe-05e7bfbb8d34",
      "name": "BuscaTrapList1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1600,
        920
      ],
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1cebe163-b56d-4bb2-ba87-c716fee0d32f",
              "leftValue": "={{ $json['trap-list'] }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5badf1f0-ec95-43b6-956b-40addc4d60bf",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1620,
        620
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8ad5e3e1-4996-444b-ae49-e3cc69b41cff",
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82ed6c89-f8f0-42dc-af37-3a9ba88be43f",
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "ephemeralMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Efemeral"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4b1379ec-28c5-4fbf-9e64-774c6ca4c551",
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ExtendedText"
            }
          ]
        },
        "options": {}
      },
      "id": "f7e68102-3a3a-4f62-92f1-743e82678517",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1860,
        800
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "df119838-c757-4618-a3c8-2e1aede4115b",
              "name": "text",
              "value": "={{ $('SetFieldsBasic').item.json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "73f6aef2-227e-47b9-86af-4af36163f27c",
      "name": "SetConversation",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        900
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agendamento-calcom",
        "options": {}
      },
      "id": "b31f053b-1a8c-47cd-a76c-9e5fbdf7d631",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        960,
        620
      ],
      "webhookId": "0c5b0ae9-641d-440a-9730-3550b0df57a0"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "b46815e0-e383-4269-bafe-7e0ce4b8e620",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        2620,
        660
      ],
      "credentials": {
        "openAiApi": {
          "id": "JkiMZM8MKW13d05b",
          "name": "OpenAi - Uso Geral 3"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.data.message.conversation }}",
                    "rightValue": "@stop",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Stop"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a637b2ac-6c58-496c-a0fe-722e4d74d25f",
                    "leftValue": "={{ $('Webhook').item.json.body.data.message.conversation }}",
                    "rightValue": "@start",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Start"
            }
          ]
        },
        "options": {}
      },
      "id": "beab6a62-fbef-457f-bb03-68b9ae7391ab",
      "name": "RemoveCliente",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1060,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "303ca7f5-92c4-40f1-8673-227cf6304ffd",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        5320,
        1000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('SetFieldsBasic').item.json.evolutiom_api_url }}/message/sendWhatsAppAudio/{{ $('SetFieldsBasic').item.json.evolution_instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('SetFieldsBasic').item.json.evolution_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('SetFieldsBasic').item.json.remoteJid }}"
            },
            {
              "name": "audio",
              "value": "={{ $json.data }}"
            },
            {
              "name": "key.fromMe",
              "value": "false"
            },
            {
              "name": "options.encoding",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "8608d365-25a1-4eef-a9a7-758243fb0291",
      "name": "(audio)Evolution API - HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        1000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('SetFieldsBasic').item.json.evolutiom_api_url }}/message/sendText/{{ $('SetFieldsBasic').item.json.evolution_instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('SetFieldsBasic').item.json.evolution_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{$('SetFieldsBasic').item.json.phone}}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b99f2467-5166-4a45-a433-74b527d828ad",
      "name": "Evolution API - HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        660
      ]
    },
    {
      "parameters": {},
      "id": "a6b5a83b-c89f-4666-9e83-4885d765c89c",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4980,
        1000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $('SetFieldsBasic').item.json.ElevenLabsVozID }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "={{ $('SetFieldsBasic').item.json['ElevenLabsAPI-KEY'] }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"text\":\"'{{$('IF-ElevenLabs').item.json.output?.replaceAll('\"',\"\").replaceAll('\\n','').replaceAll('*','').replaceAll('-','').replaceAll(':00',' horas ') }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
        "options": {}
      },
      "id": "bced2495-a28d-48ae-8790-14c4a7403df7",
      "name": "ElevenLabsGenerateVoice",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4700,
        1160
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "906ff569-de44-4bd7-bb17-5691a0dab3e1",
              "leftValue": "={{ $('SetFieldsBasic').item.json.EnableElevenLabsAPI }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "12ea76d6-0d46-4bb2-ad4e-4ff1c0efcd53",
      "name": "IF-ElevenLabs",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4300,
        1140
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output }}",
        "voice": "nova",
        "options": {
          "response_format": "mp3"
        }
      },
      "id": "81f1009f-2e8a-41c1-af24-68af490b8e7f",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        4700,
        940
      ],
      "credentials": {
        "openAiApi": {
          "id": "JkiMZM8MKW13d05b",
          "name": "OpenAi - Uso Geral 3"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "e04cac85-acf0-4167-acd0-6e8bbdfed9c1",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4700,
        660
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Conversation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "4dfe8b37-6e0e-4c64-84cd-8b2db244b457",
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Extended"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c42b80d7-89c4-4aa0-9e6c-f4f8804e9e81",
                    "leftValue": "={{ $('SetFieldsBasic').item.json.type }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            }
          ]
        },
        "options": {}
      },
      "id": "c94d06ed-f762-4df0-b0c2-9121d824876d",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4260,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6949633a-3ba1-41e6-9213-4c81ed55431c",
              "leftValue": "={{ $('SetFieldsBasic').item.json.AllWaysReplyText }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e1234920-e2b6-4e6a-9110-cabf36b84bfb",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4280,
        900
      ]
    },
    {
      "parameters": {
        "content": "# Evolution API\n",
        "height": 800,
        "width": 1720
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4200,
        520
      ],
      "id": "a9df3f96-3c27-4bc7-839e-ccef30c0559a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Stop / Start Bot",
        "height": 380,
        "width": 960,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        1160
      ],
      "id": "99011134-f053-4189-8d44-04b99f8ae253",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('SetFieldsBasic').item.json.ConversationID }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        3340,
        1000
      ],
      "id": "25ef6867-3f38-4a16-883e-e057322ef986",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "WG0hvFOSMjiJ1KjM",
          "name": "Redis - ATG"
        }
      }
    },
    {
      "parameters": {
        "name": "get_time",
        "description": "Útil para consultar o horário atual antes de realizar uma consulta de horário no `get_horarios` ou agendar diretamente no `make_call_meeting`.",
        "workflowId": {
          "__rl": true,
          "value": "UhBFFFNOp5F15mC0",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "=time",
              "stringValue": "={{ $('endpoints').item.json.time }}"
            }
          ]
        }
      },
      "id": "5641630a-a69f-4d5c-8d8c-2fb972e9db44",
      "name": "get_time_cal",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        3600,
        1200
      ]
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agendamento AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Agendamento AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list_calls_meeting": {
      "ai_tool": [
        [
          {
            "node": "Agendamento AI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_horarios": {
      "ai_tool": [
        [
          {
            "node": "Agendamento AI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "make_call_meeting": {
      "ai_tool": [
        [
          {
            "node": "Agendamento AI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete_call_meeting": {
      "ai_tool": [
        [
          {
            "node": "Agendamento AI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetAudio-HTTP Request": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AgruparMSGs": {
      "main": [
        [
          {
            "node": "RedisClearMSGs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "ListaMsg-Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RedisPushMsgs": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RedisClearMSGs": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListaMsg-Redis": {
      "main": [
        [
          {
            "node": "Should Continue?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetFieldsBasic": {
      "main": [
        [
          {
            "node": "FromMe-Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetTextExtendedTextMessage": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "SetEphemeralMessage": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "RedisPushMsgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Continue?": {
      "main": [
        [
          {
            "node": "AgruparMSGs",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "FimFluxo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "SetFieldsBasic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FromMe-Switch": {
      "main": [
        [
          {
            "node": "BuscaTrapList1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "RemoveCliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RemoveFromTrapList": {
      "main": [
        [
          {
            "node": "Evolution API - HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AddTrapList": {
      "main": [
        [
          {
            "node": "Evolution API - HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BuscaTrapList1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GetAudio-HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SetConversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SetEphemeralMessage",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SetTextExtendedTextMessage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetConversation": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RemoveCliente": {
      "main": [
        [
          {
            "node": "AddTrapList",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "RemoveFromTrapList",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio-Base64-Extract from File": {
      "main": [
        [
          {
            "node": "(audio)Evolution API - HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabsGenerateVoice": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "IF-ElevenLabs": {
      "main": [
        [
          {
            "node": "ElevenLabsGenerateVoice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Evolution API - HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 2
          }
        ],
        [
          {
            "node": "IF-ElevenLabs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agendamento AI": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Agendamento AI",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "get_time_cal": {
      "ai_tool": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n-main.evolutionai.cloud",
            "user-agent": "axios/1.7.7",
            "content-length": "1010",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "n8n-main.evolutionai.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "6f0638678d0e",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Andre_Alencar",
            "data": {
              "key": {
                "remoteJid": "5511985401987@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB0B2DF9D62C27167F67E"
              },
              "pushName": "Dival S Filho 😎",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "que horas são agora, por favor?",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "f2Icf9z+qvuSnA==",
                    "senderTimestamp": "1736189132",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "nHFFPV7EihgMmw==",
                    "recipientTimestamp": "1736605866"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "1z4yqpSY/Qb6Xq0KkPuR7MDw7vOCIhPGHxSGAzRlEHA="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1736622549,
              "instanceId": "9dd79180-055b-4f02-a99f-b09d954b7880",
              "source": "web"
            },
            "destination": "https://n8n-main.evolutionai.cloud/webhook-test/agendamento-calcom",
            "date_time": "2025-01-11T16:09:10.103Z",
            "sender": "5511932081209@s.whatsapp.net",
            "server_url": "https://evolution-evolution.mixpb7.easypanel.host",
            "apikey": "94E3F0DAC71F-42C1-8E7F-E4A812B32716"
          },
          "webhookUrl": "https://n8n-hook.evolutionai.cloud/webhook-test/agendamento-calcom",
          "executionMode": "test"
        }
      }
    ]
  },
  "versionId": "20f482b4-313d-4e40-b62b-da90cae874c6",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-01-11T03:19:29.221Z",
      "updatedAt": "2025-01-11T03:19:29.221Z",
      "id": "NvT4D0248D72xsFk",
      "name": "Andre_Alencar"
    }
  ]
}