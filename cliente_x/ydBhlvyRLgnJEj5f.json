{
  "createdAt": "2024-12-12T01:17:00.685Z",
  "updatedAt": "2024-12-27T18:28:46.103Z",
  "id": "ydBhlvyRLgnJEj5f",
  "name": "Agendamento_Guilherme_Reis - V5",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "9fe22204-1dbf-4c3a-9b60-830ebacc58ee",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2960,
        1740
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "9fc31a9b-2f89-4d73-8742-6b998ef42c79",
      "name": "OpenAI Chat Model11",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2880,
        2420
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1T7eMl1DrXuWKioUNt5h5njDb9n4YRQgAUHA_ha5lNvg",
          "mode": "list",
          "cachedResultName": "Agente - SDR - Classificador",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1T7eMl1DrXuWKioUNt5h5njDb9n4YRQgAUHA_ha5lNvg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1T7eMl1DrXuWKioUNt5h5njDb9n4YRQgAUHA_ha5lNvg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nivel_de_interesse": "={{ $json.output }}",
            "nome": "={{ $('auth').item.json.body.data.pushName }}",
            "whatsapp": "={{ $('auth').item.json.body.data.key.remoteJid }}",
            "ultima_mensagem": "={{ $('mensagem_cliente').item.json.texto }}",
            "data_hora": "={{ $now.format('yyyy-MM-dd hh:mm:ss') }}",
            "id": "={{ $now.format('yyyy-MM-dd hh:mm:ss') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "whatsapp",
              "displayName": "whatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nivel_de_interesse",
              "displayName": "nivel_de_interesse",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultima_mensagem",
              "displayName": "ultima_mensagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "data_hora",
              "displayName": "data_hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "7048a265-7b5a-4939-b3d8-f8122475b5d7",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3240,
        2280
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vPLsQvdaG0RGo0qw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eb365f96-a2f6-4341-ae64-b661b9522e5f",
              "leftValue": "={{ $('Assistente_comercial_classificador').item.json.output }}",
              "rightValue": "muito_interesse",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "83a6db52-39d0-46a5-9438-8fd181ff2a9b",
      "name": "encaminhar_um_zap_pro_rep",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3400,
        2280
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "informações",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Informações"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9cf9869-8857-4e8e-bc38-e9716c978784",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "agendamento",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Agendamento"
            }
          ]
        },
        "options": {}
      },
      "id": "13044386-c732-4409-ae09-5bb6d9ea100c",
      "name": "intencao",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3440,
        1540
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "body.data.message.base64",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "={{ $json.body.data.message.audioMessage.mimetype }}"
        }
      },
      "id": "9c6fe18b-8d89-41ca-8f88-1cd8209f3294",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1840,
        1500
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7066ff08-1370-464f-a588-86aa37025523",
              "name": "texto",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d7263dc7-bfec-429e-8190-555b97df6355",
      "name": "edit1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2240,
        1500
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "09db48f1-b99e-4760-8a9b-10944a1ce0d2",
              "name": "texto",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "12ec4ef3-a3a6-4ff6-8ef5-94ac1bbcbf49",
      "name": "edit2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2240,
        1700
      ]
    },
    {
      "parameters": {
        "content": "## Autenticação",
        "height": 388.0773038435652,
        "width": 497.35749825591427,
        "color": 2
      },
      "id": "0a8b1a45-c416-4b74-b088-927775c29b92",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        1480
      ]
    },
    {
      "parameters": {
        "content": "## Processar audio + texto",
        "height": 455.88406985111124,
        "width": 1224.7391699732286
      },
      "id": "7260a4e0-62a9-4822-9bab-3fb8afb611ce",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1360,
        1460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "17b6fa1c-f4ea-4c75-9c9e-1a43900dbc58",
              "leftValue": "={{ $json.body.apikey }}",
              "rightValue": "1DED85B31895-4393-97AE-4CB8172D17B2",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "70c82c3b-7619-4b50-899f-17931323d19d",
              "leftValue": "={{ $json.body.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f2e6388a-e96a-4046-9df0-89dbf3456e53",
      "name": "auth",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1100,
        1600
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "50c6e2b0-2494-4780-abd8-84a0e4213091",
                    "leftValue": "={{ $json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "texto"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "e497f7d3-9a35-4e44-8183-d8d5aa1897c5",
      "name": "mensagem_tipo",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1440,
        1540
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "IA",
        "height": 750.4808437390784,
        "width": 1857.562633320633,
        "color": 4
      },
      "id": "4fbd87a4-b8fe-4350-a359-6cfadd037598",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2620,
        1460
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f8e1fbf-9134-4b48-be29-066509e021f5",
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "60d6b895-fea6-4d7f-932a-b8771c97242e",
              "name": "WhatsAppApp",
              "value": "={{ $json.mensagem_tipo?.body?.data?.message?.conversation || $json.texto || '' }}\n\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0d8bd7c3-4a96-4108-a738-44525c5c0853",
      "name": "Filtra Webhook",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        2200
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "9a004476-bbad-46a2-bd39-01889293a292",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1860,
        1980
      ],
      "webhookId": "e061b007-1b91-4de7-b2a8-75e3b321aaa3"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagem",
        "key": "={{ $json.telefone }}",
        "options": {}
      },
      "id": "c18a43ac-fa9b-43a2-ada9-cea3e33587e4",
      "name": "Puxar as Mensagens",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1860,
        2180
      ],
      "credentials": {
        "redis": {
          "id": "0qF1xxY6s73Fh5ad",
          "name": "Redis - lnc"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "9e9b4155-e399-4936-a5db-2d79c8cb871f",
              "leftValue": "={{ $json.mensagem.last() }}",
              "rightValue": "={{ $('Filtra Webhook').item.json.Audio || $('Filtra Webhook').item.json.WhatsWeb || $('Filtra Webhook').item.json.WhatsAppApp || $('Filtra Webhook').item.json.Imagem }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "762e4ae6-0ef9-4e38-957f-80bf287bd23a",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2060,
        2180
      ]
    },
    {
      "parameters": {},
      "id": "e848ca2e-f565-437f-9a40-e132f9548697",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2380,
        2200
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $json.telefone }}"
      },
      "id": "2b0f356e-cdb2-4bf7-9271-f23cbf093952",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2380,
        2020
      ],
      "credentials": {
        "redis": {
          "id": "0qF1xxY6s73Fh5ad",
          "name": "Redis - lnc"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.telefone }}",
        "messageData": "={{ $json.Audio || $json.WhatsWeb || $json.WhatsAppApp || $json.Imagem || $json.mensagem}}",
        "tail": true
      },
      "id": "df880eb1-4baf-44db-a391-3a20cf621829",
      "name": "Lista Mensagens1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1660,
        1980
      ],
      "credentials": {
        "redis": {
          "id": "0qF1xxY6s73Fh5ad",
          "name": "Redis - lnc"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bce70488-3d4e-412d-9c28-4858906bc722",
              "name": "texto",
              "value": "={{ $('Puxar as Mensagens').item.json.mensagem.join('\\n') }}",
              "type": "string"
            },
            {
              "id": "abca95c7-60a4-474b-95ed-a22557fa8af7",
              "name": "telefone",
              "value": "={{ $('Wait').item.json.telefone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "37150a78-5890-4036-9b07-378a6fc79baf",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2100,
        2020
      ]
    },
    {
      "parameters": {
        "content": "Espera da mensagem (picotada)",
        "height": 486,
        "width": 1095,
        "color": 3
      },
      "id": "42814ca6-6b03-42a7-bb96-9cd0630cadc5",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1480,
        1940
      ]
    },
    {
      "parameters": {
        "content": "Classificador de interesse",
        "height": 376,
        "width": 1009
      },
      "id": "ed0afd45-d683-437e-acd7-49b16197d7d5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2620,
        2220
      ]
    },
    {
      "parameters": {},
      "id": "4b2b3607-6e0a-4c73-9052-31f7fb5153bc",
      "name": "Calculator1",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        3580,
        2000
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "6cdc3804-3d51-4f64-bd70-4a88ffd1d117",
      "name": "OpenAI Chat Model5",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3240,
        1920
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "a0176b79-38c0-4333-aed7-4bbcda342254",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        2040,
        1500
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('mensagem_cliente').item.json.texto }}",
        "options": {
          "systemMessage": "=Você é um classificador especializado em análise de interesse comercial. Sua função é analisar o histórico de mensagens e classificar o nível de interesse do cliente.\n\n<context>\nVocê deve analisar as últimas mensagens e determinar o nível de interesse do cliente, classificando APENAS em uma das três categorias:\n- sem_interesse\n- com_interesse\n- muito_interesse\n</context>\n\n<rules>\n1. Mantenha o foco apenas na classificação solicitada\n2. Não forneça explicações ou justificativas\n3. Analise o contexto completo antes de decidir\n4. Considere a progressão do interesse ao longo das mensagens\n5. Em caso de dúvida entre dois níveis, escolha o nível mais baixo\n</rules>\n\n<output_format>\nResponda apenas com uma das três categorias:\nsem_interesse\ncom_interesse\nmuito_interesse\n</output_format>\n\n<classificacao>\nsem_interesse: cliente apenas buscando informações básicas\ncom_interesse: cliente solicitando informações específicas\nmuito_interesse: cliente demonstrando conexão emocional ou desejo pelo imóvel\n</classificacao>\n\n<evaluation>\nAnalise internamente:\n1. O tipo de perguntas feitas\n2. A especificidade das informações solicitadas\n3. O envolvimento emocional nas mensagens\n4. A frequência e progressão das interações\n</evaluation>\n\n<input>\nAnalisasr na sua memória de chats.\n</input>\n\nApenas responda \"sem_interesse\" ou \"com_interesse\" ou \"muito_interesse\" e mais nada."
        }
      },
      "id": "dec4bce5-c3da-4286-b2ee-b792df9c95fc",
      "name": "Assistente_comercial_classificador",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2860,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM dinastia_mensagens;",
        "options": {}
      },
      "id": "3ddb2669-1b1d-4568-997e-e3cf6db3b506",
      "name": "Deletar_todas_as_mensagens",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        920,
        1180
      ],
      "credentials": {
        "postgres": {
          "id": "t0C7h4e8cYOfsTD1",
          "name": "Postgres - LNC"
        }
      }
    },
    {
      "parameters": {},
      "id": "585966df-8091-4b5e-bb82-d8078034ca9a",
      "name": "mensagem_cliente",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2700,
        1540
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $(\"mensagem_cliente\").item.json.telefone.split(\"@\")[0] }}",
        "tableName": "dinastia_mensagens",
        "contextWindowLength": 50
      },
      "id": "e449ef9c-237f-4a5a-8444-1f08c8514794",
      "name": "Postgres Chat Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        3400,
        2080
      ],
      "credentials": {
        "postgres": {
          "id": "t0C7h4e8cYOfsTD1",
          "name": "Postgres - LNC"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.texto }}",
        "options": {
          "systemMessage": "=# Instruções para \"Brenda IA\" - Classificação de Mensagens de Clientes\n\n### Regras de Classificação\n\n1. A função principal da \"Brenda IA\" é identificar a intenção da mensagem do cliente em **apenas duas categorias**:\n   - **informações**\n   - **agendamento**\n\n2. Caso nenhuma das opções seja claramente identificada, **retorne sempre \"informações\"**.\n\n3. As respostas devem conter **somente o texto \"informações\" ou \"agendamento\"**, sem qualquer outro conteúdo.\n\n4. Nunca mencione ou sugira ao cliente para onde o atendimento será redirecionado.\n\n---\n\n### Exemplos de Uso\n\n**Exemplo 1**:  \n**User**: Não precisa mais fazer o reagendamento  \n**AI**: agendamento  \n\n**Exemplo 2**:  \n**Human**: Olá, eu gostaria de agendar uma consulta para amanhã às 9h  \n**AI**: agendamento  \n**Human**: Amanhã, dia 25 de novembro, às 9h está disponível. Poderia confirmar esse horário?  \n**Human**: pode confirmar  \n**AI**: agendamento\n"
        }
      },
      "id": "3e1607d9-8357-490f-8ddc-4ed42642ae25",
      "name": "recepcionista",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2940,
        1540
      ],
      "retryOnFail": true,
      "maxTries": 3,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('mensagem_cliente').item.json.texto }}",
        "options": {
          "systemMessage": "=<instrucoes>\n  <assistente>\n    <nome>Natália IA</nome>\n    <descricao>\n      Secretária virtual concebida para gerenciar de forma eficiente e amigável os agendamentos e cancelamentos de consultas na Clínica Nakamura. Trabalha na Clínica Nakamura do Dr. Marcelino Nakamura.\n    </descricao>\n    <objetivo>\n      Focada em oferecer uma experiência prática e personalizada, exibe horários disponíveis, pergunta se o cliente concorda com a data e hora antes de confirmar o agendamento e fornece todos os detalhes essenciais após a marcação.\n    </objetivo>\n    <regrasGerais>\n      <formatoDataHora>DD/MM/AAAA e HH</formatoDataHora>\n      <timezone>America/Sao_Paulo</timezone>\n      <horarioFuncionamento>\n        <segTerQua>14h às 18h</segTerQua>\n        <quiSex>\n          <manha>08h às 12:30h</manha>\n          <tarde>14h às 18h</tarde>\n        </quiSex>\n        <sab>9h às 12h</sab>\n        <restricao>Nunca agende fora dos horários de funcionamento.</restricao>\n      </horarioFuncionamento>\n    </regrasGerais>\n    <agendamento>\n      <duracao>30 minutos</duracao>\n      <verificarDisponibilidade>Próximos 7 dias úteis</verificarDisponibilidade>\n      <regras>\n        <sugestaoHorario>\n          Se ocupado, sugira horário próximo (15 minutos antes ou depois).\n        </sugestaoHorario>\n        <restricao>Nunca agende sobrepondo outro evento ou fora do horário de funcionamento.</restricao>\n        <confirmacao>\n          Pergunte ao cliente se pode confirmar, mas não confirme automaticamente.\n        </confirmacao>\n        <dataForaDoPeriodo>\n          Informe que só é possível agendar para os próximos 7 dias úteis.\n        </dataForaDoPeriodo>\n        <semDataSugerida>Proponha a próxima disponível.</semDataSugerida>\n      </regras>\n    </agendamento>\n    <reagendamento>\n      <processo>\n        <passo>Identifique a nova data e hora desejada pelo cliente.</passo>\n        <passo>\n          Verifique disponibilidade a partir do novo horário por até 2 dias úteis.\n        </passo>\n        <ocupado>Sugira horário mais próximo.</ocupado>\n        <disponivel>\n          Confirme o novo agendamento com o cliente.\n        </disponivel>\n        <confirmado>\n          Exclua o agendamento anterior com delete_event e crie o novo com create_event.\n        </confirmado>\n      </processo>\n    </reagendamento>\n    <cancelamento>\n      <processo>\n        <passo>Extraia informações do evento (data, hora e eventId).</passo>\n        <passo>Utilize delete_event para cancelar.</passo>\n        <mensagemSucesso>Consulta cancelada com sucesso!</mensagemSucesso>\n        <mensagemErro>\n          Infelizmente não encontramos consulta solicitada. Agradecemos e tomaremos as providências de cancelamento internamente.\n        </mensagemErro>\n      </processo>\n    </cancelamento>\n    <confirmacao>\n      Escreva mensagens breves e cordiais confirmando a consulta baseada no evento já agendado.\n    </confirmacao>\n    <excecoes>\n      <foraHorarioFuncionamento>\n        <mensagem>\n          Sinto muito, mas esta solicitação está fora do nosso horário de funcionamento.\n        </mensagem>\n      </foraHorarioFuncionamento>\n    </excecoes>\n    <exemplos>\n      <resposta>\n        <user>Pode marcar uma consulta para terça às 14h?</user>\n        <ia>Terça-feira às 14h está disponível. Poderia confirmar esse horário, por favor?</ia>\n      </resposta>\n    </exemplos>\n    <output>\n      <formatoJSON>\n        <comEventId>{ mensagem: sua mensagem aqui, eventId: o eventId do agendamento criado aqui }</comEventId>\n        <semEventId>{ mensagem: sua mensagem aqui }</semEventId>\n      </formatoJSON>\n    </output>\n    <regrasImportantes>\n      <regra>Seja cordial e direta.</regra>\n      <regra>Responda sempre no timezone America/Sao_Paulo.</regra>\n      <regra>Nunca confirme automaticamente; peça confirmação ao cliente.</regra>\n      <regra>Apenas responda sobre agendamentos; ignore outros assuntos.</regra>\n      <regra>Utilize a calculadora para calcular diferenças de datas e horários.</regra>\n    </regrasImportantes>\n  </assistente>\n</instrucoes>\n"
        }
      },
      "id": "8c77ad50-ff40-4a0c-8fc3-5eff730d45cc",
      "name": "Secretaria agendamento",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        3300,
        1760
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agendamento-v5",
        "options": {}
      },
      "id": "3a96d47d-7078-4aae-83fc-7f859e21c8fc",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        860,
        1600
      ],
      "webhookId": "c6b6e6ec-a103-4f9d-93cd-1964ad28f4ec"
    },
    {
      "parameters": {
        "content": "roda para setar o banco de dados vetorial do supabase",
        "height": 274.7923843700217,
        "width": 273.1627906976745,
        "color": 7
      },
      "id": "3ba6bc2f-a827-4b38-9ba7-c571db575931",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1180,
        1100
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$;\n",
        "options": {}
      },
      "id": "7eaefe24-cc13-4366-9b06-b3845e09bd24",
      "name": "setar_supabase_tabelas_vectoriais",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1260,
        1180
      ],
      "credentials": {
        "postgres": {
          "id": "t0C7h4e8cYOfsTD1",
          "name": "Postgres - LNC"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.texto }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('arquivo_id').item.json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "b1f90e28-e362-4501-9665-070c2fd17e88",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        4540,
        1080
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "13be36f4-e823-4f98-8d9e-adf04f079b42",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        4340,
        1060
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 500,
        "chunkOverlap": 250,
        "options": {}
      },
      "id": "23d7a2a5-5717-4f23-a9d2-7e167e581e82",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        4500,
        1220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "c9e1ed84-5dcc-43c3-999b-cf1d095eba32",
              "name": "file_mime_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d64b641c-bb92-4fa2-90ec-2281f199965e",
      "name": "arquivo_id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2940,
        900
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1mWNeDAr6kmPwPsur6FH9Zl_JE9Q5GSNG",
          "mode": "list",
          "cachedResultName": "RAG-PASTA",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mWNeDAr6kmPwPsur6FH9Zl_JE9Q5GSNG"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "c12c010a-5d2d-4208-b55c-9383f0961c43",
      "name": "arquivo_criado",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        2700,
        800
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BRdD3UKUCiFRqLKy",
          "name": "Google Drive - Divalf"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1VN71VrW1ua_EgHG82-_6Ys2EG0JGsoup",
          "mode": "list",
          "cachedResultName": "7F964FA05B536B9D",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1VN71VrW1ua_EgHG82-_6Ys2EG0JGsoup"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "f048fd7b-c5a4-4e93-af18-cdfcc6d47350",
      "name": "arquivo_alterado",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        2700,
        1020
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BRdD3UKUCiFRqLKy",
          "name": "Google Drive - Divalf"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "52092be3-8a6c-4918-af8d-cd7c34fcc6bb",
      "name": "deletar_arquivos_antigos",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3100,
        900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "W40Vqz7D7quG7v0S",
          "name": "Supabase - LNC"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('arquivo_id').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "dc8100ab-0d4b-4418-a564-2ec6579087cd",
      "name": "download_arquivo",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3280,
        900
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BRdD3UKUCiFRqLKy",
          "name": "Google Drive - Divalf"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "a00c37b0-a52c-4f07-b990-b9194884a885",
      "name": "extrair_pdf",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3800,
        780
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aecaf0bd-b800-40b7-b348-c1a8ff636ef1",
              "name": "texto",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7caa22eb-9261-449c-b048-247326fc0bab",
      "name": "exportar_texto",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4140,
        900
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "text",
        "options": {}
      },
      "id": "27bdf9d7-b1b9-4798-b498-dcd56d9142ef",
      "name": "extrair_texto",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3800,
        1000
      ]
    },
    {
      "parameters": {
        "content": "## RAG - Supabase",
        "height": 808.3490987621882,
        "width": 2183.945940845158
      },
      "id": "b4607dab-267b-4353-a07e-f614738f3628",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2620,
        640
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "28986dba-8907-476b-904e-9be853379391",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3680,
        1660
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contem mais informações sobre a construtora plaenge como poltítica de privacidade e FAQ",
        "topK": 10
      },
      "id": "ef8aec9f-ec29-47d4-87fd-c60d8fe07043",
      "name": "Retrieve Documents",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        4160,
        1560
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "586431b0-e3fe-40ce-8d6b-cd3ee75112a5",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        4180,
        1860
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "d6229cbb-b4ed-45c2-9f4e-776408b6725a",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4340,
        1660
      ],
      "credentials": {
        "openAiApi": {
          "id": "DOqh24nunYYvR0kE",
          "name": "OpenAi - Vendedor LNC"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "f77b80e6-ca68-4605-a8dd-8047853b91be",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        4020,
        1720
      ],
      "credentials": {
        "supabaseApi": {
          "id": "W40Vqz7D7quG7v0S",
          "name": "Supabase - LNC"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('arquivo_id').item.json.file_mime_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d67dd12c-f3be-40aa-bc38-e37b75e7d768",
                    "leftValue": "={{ $('arquivo_id').item.json.file_mime_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "GOOGLE-TEXTO"
            }
          ]
        },
        "options": {}
      },
      "id": "3962f608-d863-4dc2-a2fb-06a08618a37f",
      "name": "tipo_arquivo",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3460,
        900
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "ce9cce40-fa52-4e6c-aae9-04b7ed05111d",
      "name": "supabase_vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        4380,
        900
      ],
      "credentials": {
        "supabaseApi": {
          "id": "W40Vqz7D7quG7v0S",
          "name": "Supabase - LNC"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1440,
        1740
      ],
      "id": "40e714f9-824e-49b8-946a-11f5f11966e7",
      "name": "Sem Autorização"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('recepcionista').item.json.output }}",
        "options": {
          "systemMessage": "=<instrucoes>\n  <assistente>\n    <nome>Glenda IA</nome>\n    <descricao>\n      Assistente Virtual da Clínica Nakamura, responsável por atender os clientes de forma cordial e eficiente.\n    </descricao>\n    <diretrizesAtendimento>\n      <saudacaoInicial>\n        Sempre inicie a conversa com uma saudação gentil e, em seguida, apresente-se.\n        <exemplo>Bom Dia! Eu sou a Glenda IA, assistente na Clínica Nakamura. Como posso ajudar?</exemplo>\n      </saudacaoInicial>\n      <estiloAtendimento>\n        <regra>Respeite o cliente e atenda de forma altamente cordial.</regra>\n        <regra>\n          Qualifique o cliente e direcione-o para:\n          <opcoes>\n            <opcao>Agendamento de consulta com a Assistente \"Natália IA\".</opcao>\n            <opcao>Acionamento de um atendente humano, caso necessário.</opcao>\n          </opcoes>\n        </regra>\n      </estiloAtendimento>\n      <restricoes>\n        <restricao>Não forneça respostas com mais de 600 caracteres.</restricao>\n        <restricao>Nunca dê diagnósticos ou prescreva medicamentos.</restricao>\n        <restricao>Sempre deixe as decisões médicas para o Dr. Marcelino Nakamura.</restricao>\n      </restricoes>\n    </diretrizesAtendimento>\n    <especializacaoDrMarcelinoNakamura>\n      <descricao>\n        Deixe claro, quando necessário, que o Dr. Marcelino Nakamura realiza apenas a técnica de cirurgia bariátrica \"Sleeve\" (Gastrectomia Vertical).\n      </descricao>\n    </especializacaoDrMarcelinoNakamura>\n    <informacoesPermitidas>\n      <topicos>\n        <topico>Cirurgia bariátrica</topico>\n        <topico>Horário de funcionamento da clínica</topico>\n        <topico>Planos de saúde aceitos</topico>\n        <topico>Detalhes contidos na base de conhecimento da clínica</topico>\n      </topicos>\n    </informacoesPermitidas>\n    <formatoRespostas>\n      <regra>Use até 3 parágrafos, sempre com clareza e objetividade.</regra>\n      <regra>Quando aplicável, ofereça a opção de agendar uma consulta.</regra>\n    </formatoRespostas>\n  </assistente>\n</instrucoes>\n"
        }
      },
      "id": "6681abf1-4222-417b-864a-26a76fe61768",
      "name": "assistente_pessoal",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3700,
        1520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution-evolution.mixpb7.easypanel.host/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "312b3a44-bac5-4963-97d1-ec552919187e",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3800,
        1760
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution-evolution.mixpb7.easypanel.host/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "f2e4833b-6bc6-49a4-b0e4-d4b7415ed0e0",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "cc90b20ed02776e4faba7b5e9003664891e4c03076067f356bf0001be00d8487@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Nakamura"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $fromAI(\"Initital_DateTime\", \"Data e hora inicial da consulta Ex.: 2024-10-17 00:00:00\") }}",
          "timeMax": "={{ $fromAI(\"Final_DateTime\", \"Data e hora final da consulta Ex.: 2024-10-17 00:00:00\") }}"
        }
      },
      "id": "2266d8e1-e85c-4ace-8dc2-b88d5333548f",
      "name": "get_event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        3860,
        2000
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "4I7PpR7Fj4L6L6sQ",
          "name": "Google Calendar - Divalf"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "cc90b20ed02776e4faba7b5e9003664891e4c03076067f356bf0001be00d8487@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Nakamura"
        },
        "eventId": "={{ $fromAI(\"Event_ID\",\"Id do evento que deve ser excluído\") }}",
        "options": {}
      },
      "id": "a4d47cad-d69a-402d-8e44-4608a353d676",
      "name": "delete_event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        3700,
        2000
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "4I7PpR7Fj4L6L6sQ",
          "name": "Google Calendar - Divalf"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "cc90b20ed02776e4faba7b5e9003664891e4c03076067f356bf0001be00d8487@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Nakamura"
        },
        "start": "={{ $fromAI(\"Start_Time\",\"Horário inicial do evento ex.:2024-10-08 00:00:00\") }}",
        "end": "={{ $fromAI(\"End_Time\",\"Horário final do evento ex.:2024-10-08 00:01:00\") }}",
        "additionalFields": {
          "summary": "=Reunião agendada com {{ $('Webhook').item.json.body.data.pushName }} , telefone  {{ $('Webhook').item.json.body.data.key.remoteJid.replace('@s.whatsapp.net', '').replace(/^55/, '') }}\n"
        }
      },
      "id": "0f93f341-28ba-41bc-b70f-b3743ffb4260",
      "name": "create_event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        4000,
        2000
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "4I7PpR7Fj4L6L6sQ",
          "name": "Google Calendar - Divalf"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3160,
        2440
      ],
      "id": "bb448237-b1de-45ff-884a-39e3f347da23",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "content": "roda para deletar todas as mensagens",
        "height": 274.7923843700217,
        "width": 273.1627906976745,
        "color": 7
      },
      "id": "07dce5b6-fd6b-4d75-9949-a055abc633a1",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        1100
      ]
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "recepcionista",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model11": {
      "ai_languageModel": [
        [
          {
            "node": "Assistente_comercial_classificador",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "encaminhar_um_zap_pro_rep",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "intencao": {
      "main": [
        [
          {
            "node": "assistente_pessoal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Secretaria agendamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edit1": {
      "main": [
        [
          {
            "node": "Filtra Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edit2": {
      "main": [
        [
          {
            "node": "Filtra Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "auth": {
      "main": [
        [
          {
            "node": "mensagem_tipo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sem Autorização",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mensagem_tipo": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "edit2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mensagem_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra Webhook": {
      "main": [
        [
          {
            "node": "Lista Mensagens1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Puxar as Mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Puxar as Mensagens": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "mensagem_cliente",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Lista Mensagens1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "edit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assistente_comercial_classificador": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mensagem_cliente": {
      "main": [
        [
          {
            "node": "recepcionista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Assistente_comercial_classificador",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Secretaria agendamento",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "recepcionista",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "assistente_pessoal",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "recepcionista": {
      "main": [
        [
          {
            "node": "intencao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Secretaria agendamento": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "auth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "supabase_vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "supabase_vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "arquivo_id": {
      "main": [
        [
          {
            "node": "deletar_arquivos_antigos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "arquivo_criado": {
      "main": [
        [
          {
            "node": "arquivo_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "arquivo_alterado": {
      "main": [
        [
          {
            "node": "arquivo_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "deletar_arquivos_antigos": {
      "main": [
        [
          {
            "node": "download_arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_arquivo": {
      "main": [
        [
          {
            "node": "tipo_arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extrair_pdf": {
      "main": [
        [
          {
            "node": "exportar_texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "exportar_texto": {
      "main": [
        [
          {
            "node": "supabase_vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extrair_texto": {
      "main": [
        [
          {
            "node": "exportar_texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "assistente_pessoal",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents": {
      "ai_tool": [
        [
          {
            "node": "assistente_pessoal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "tipo_arquivo": {
      "main": [
        [
          {
            "node": "extrair_pdf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "extrair_texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "assistente_pessoal": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Assistente_comercial_classificador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_event": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete_event": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_event": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n-main.evolutionai.cloud",
            "user-agent": "axios/1.7.7",
            "content-length": "989",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "n8n-main.evolutionai.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "6f0638678d0e",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Criador_Digital",
            "data": {
              "key": {
                "remoteJid": "5511985401987@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB0366241C58F47C8CA4C"
              },
              "pushName": "Dival S Filho 😎",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Boa Noite! Gostaria de agendar uma consulta para a próxima segunda às 11h.",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "XBbAzUt+V+cPbQ==",
                    "senderTimestamp": "1733619481",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "7PL+4bs/3JGkRw==",
                    "recipientTimestamp": "1733619357"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "+1lhFgcb8Ak6AZCD0Dg1fFI0ASm3jUNhBKhjwixAMHI="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1733972813,
              "instanceId": "3b64fd51-8cf2-4a12-a655-f75bd8641211",
              "source": "web"
            },
            "destination": "https://n8n-main.evolutionai.cloud/webhook-test/agendamento-v5",
            "date_time": "2024-12-12T00:06:53.748Z",
            "sender": "5511932081209@s.whatsapp.net",
            "server_url": "https://evolution-evolution.mixpb7.easypanel.host",
            "apikey": "1DED85B31895-4393-97AE-4CB8172D17B2"
          },
          "webhookUrl": "https://n8n-hook.evolutionai.cloud/webhook-test/agendamento-v5",
          "executionMode": "test"
        }
      }
    ]
  },
  "versionId": "4612d179-69a3-4734-a5fa-739856018536",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-12-12T01:16:35.242Z",
      "updatedAt": "2024-12-12T01:16:35.242Z",
      "id": "SgKIyYvQmPTUtt9F",
      "name": "NEW"
    },
    {
      "createdAt": "2024-12-12T01:16:35.242Z",
      "updatedAt": "2024-12-12T01:16:35.242Z",
      "id": "AA9kPAuOXHhBZfKQ",
      "name": "ATENDENTE"
    }
  ]
}