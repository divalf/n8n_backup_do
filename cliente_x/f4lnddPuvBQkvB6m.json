{
  "createdAt": "2024-12-25T22:36:11.242Z",
  "updatedAt": "2024-12-26T01:43:31.649Z",
  "id": "f4lnddPuvBQkvB6m",
  "name": "Assistente_Pessoal - Odonto Agendamento",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para deletar eventos e agendamentos no calendário usando o eventId",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "cc90b20ed02776e4faba7b5e9003664891e4c03076067f356bf0001be00d8487@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Nakamura"
        },
        "eventId": "={{ $fromAI(\"Event_ID\",\"Id do evento que deve ser excluído\") }}",
        "options": {}
      },
      "id": "c27b0a0c-46fc-4d6a-be71-2aedbee65b63",
      "name": "Deletar Evento1",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        680,
        220
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "4I7PpR7Fj4L6L6sQ",
          "name": "Google Calendar - Divalf"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para criar novos agendamentos no calendário.",
        "calendar": {
          "__rl": true,
          "value": "cc90b20ed02776e4faba7b5e9003664891e4c03076067f356bf0001be00d8487@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Nakamura"
        },
        "start": "={{ $fromAI(\"Start_Time\",\"Horário inicial do evento ex.:2024-10-08 00:00:00\") }}",
        "end": "={{ $fromAI(\"End_Time\",\"Horário final do evento ex.:2024-10-08 00:01:00\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"email\", \"Email do recipiente caso haja um\", \"string\", \"imperador@dinastia.uk\") }}"
          ],
          "summary": "=Reunião agendada com  {{ $fromAI(\"nome\", \"Nome do recipiente da reuniao\", \"string\", \"Cliente\") }}, telefone {{ $json.query.numero.split(\"@\")[0] }}\n"
        }
      },
      "id": "a6c7c496-fecd-4fc2-9667-85a50ac916e8",
      "name": "Criar Eventos1",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        980,
        220
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "4I7PpR7Fj4L6L6sQ",
          "name": "Google Calendar - Divalf"
        }
      }
    },
    {
      "parameters": {},
      "id": "52ab491b-3511-427c-b16b-5ffe833ca593",
      "name": "Calculator1",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        540,
        220
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "b906302f-ac99-47ab-b6e8-5ca4aba0d6d0",
      "name": "OpenAI Chat Model5",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        200,
        220
      ],
      "credentials": {
        "openAiApi": {
          "id": "v7f08akDjfrWKlNo",
          "name": "OpenAi account - Uso Geral 2"
        }
      }
    },
    {
      "parameters": {},
      "id": "dd28f60d-67e8-4a9f-b8a4-fc4b0825f915",
      "name": "gatilho",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "56060925-7cc8-441b-904a-2fe55ef3ecf0",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8ce2716a-465b-442d-8774-b15e38a33de2",
      "name": "response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        0
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para consultar datas e disponibilidade para novos agendamentos ou apenas para checar o que já foi agendado. ",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "cc90b20ed02776e4faba7b5e9003664891e4c03076067f356bf0001be00d8487@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Nakamura"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $fromAI(\"Initital_DateTime\", \"Data e hora inicial da consulta Ex.: 2024-10-17 00:00:00\") }}",
          "timeMax": "={{ $fromAI(\"Final_DateTime\", \"Data e hora final da consulta Ex.: 2024-10-17 00:00:00\") }}"
        }
      },
      "id": "647b6e84-871e-4d29-83ca-675727c6d282",
      "name": "get_many",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        840,
        220
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "4I7PpR7Fj4L6L6sQ",
          "name": "Google Calendar - Divalf"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<numero>{{ $json.query.numero }}</numero>\n<mensagem>{{ $json.query.mensagem }}</mensagem>\n<email>{{ $json.query.email }}</email>\n<nome>{{ $json.query.nome }}</nome>",
        "options": {
          "systemMessage": "=Não responda nada que não esteja em <INSTRUCAO></INSTRUCAO>. Aja apenas como descrito dentro de <INSTRUCAO></INSTRUCAO>.\n\n<INSTRUCAO> Você é uma secretária virtual projetada para gerenciar de forma eficiente e amigável os agendamentos e cancelamentos de reuniões e visitas. Seu nome é \"Dama IA\" e você trabalha para a construtora \"Plaenge\".\n\n Focado em oferecer uma experiência prática e personalizada, o assistente exibe horários disponíveis, pergunta se o cliente concorda com a data e hora antes de confirmar o agendamento e fornece todos os detalhes essenciais após a marcação. O assistente também respeita o formato brasileiro de data e hora (DD/MM/AAAA e HH) e opera no fuso horário \"America/Sao_Paulo\".\n\nSempre verifica as datas disponiveis no calendário antes de oferecer ao cliente.\n\nhorário de funcionamento:\nSegunda a sexta: das 8h às 21h.\nSábado: das 8h às 12h. nunca agende fora do horario de funcionamento.\nPara sua referencia use como referencia para a data e hora atual: {{ (() => {\n  const date = new Date(); // Obtém a data atual\n  const days = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado']; // Dias da semana em português\n  const pad = n => n.toString().padStart(2, '0'); // Adiciona zero à esquerda\n  const dayName = days[date.getDay()]; // Obtém o nome do dia\n  const year = date.getFullYear();\n  const month = pad(date.getMonth() + 1); // Mês começa em 0\n  const day = pad(date.getDate());\n  const hours = pad(date.getHours());\n  const minutes = pad(date.getMinutes());\n  const seconds = pad(date.getSeconds());\n  return `${dayName}, ${year}-${month}-${day} ${hours}:${minutes}:${seconds}`; // Retorna no formato desejado\n})() }}\n\n\nfaça agendamentos de 30 minutos de duração.\nse o horario pedido pelo cliente ja tiver alguma reuniao marcada, sugira o mais proximo 30 minutos antes ou 30 minutos depois da reunião  existente, mas esta proibido marcar em um horario que ja exista reuniao\nPergunte se o cliente pode confirmar, mas não confirme diretamente o agendamento.\n\nSempre utilize o timezone \"America/Sao_Paulo\" para todas as operações.\n\n<REAGENDAMENTO>\nDe acordo com o histórico de mensagens, siga o processo de reagendamento nesta ordem:\n1. use a calculadora(apenas some numeros inteiros, sem usar textos) para identificar a data e hora especifica que o cliente gostaria de marcar o <NOVO_AGENDAMENTO>.\n2. Busque todos os eventos apartir do horario do <NOVO_AGENDAMENTO> até para os próximos 2 dias.\n2.1 Caso já houver um agendamento o mesmo horário, sugira uma data mais próxima.\n2.2 Caso não houver nenhum agendamento no mesmo horário, confirme com o usuário o <NOVO_AGENDAMENTO>.\n3. Quando o usário confirmar, delete o agendamento anterior usando o eventId. Crie o <NOVO_AGENDAMENTO>.\n</REAGENDAMENTO>\n\n<CANCELAMENTO>\nBaseado no histórico de mensagens, extraia as informações do evento a ser cancelado (data, hora e eventId).\nCaso não localize o evento, retorne false com uma mensagem de erro.\n</CANCELAMENTO>\n\n<CONFIRMACAO>\nEscreva mensagens breves e cordiais confirmando a reunião com base no evento já agendado, respeitando o timezone America/Sao_Paulo.\n</CONFIRMACAO>\n\n<AGENDAMENTOS>\nQuando a <mensagem></mensagem> for algo parecido com \"Ola tudo bem? Eu estou precisando fazer uma limpesa dental, como q eu façø? Tem agendamento?\"\n\nApenas realize uma busca até o próximo dia útil e informe a data mais próxima para um possivel agendamento.\n</AGENDAMENTOS>\n\n<FALLBACK>\nCaso você não identificar nenhunma intenção especifican relacionado a agendamentos, realize uma busca dos próximos agendamentos até o próximo dia útil e retorne a data disponível mais próxima para ser agendada.\n</FALLBACK>\n\n\nExceções:\n\nCaso identifique uma situação específica de exceção, retorne a mensagem correspondente definida na exceção (<EXCESSAO></EXCESSAO>).\n\nRegras Importantes:\n\nSeja cordial e direta.\nResponda sempre no timezone: America/Sao_Paulo.\nNunca confirme agendamentos automaticamente; peça confirmação ao cliente.\nApenas responda sobre agendamentos; ignore qualquer outro contexto.\nRetorne mensagens no formato texto, sem códigos ou informações adicionais.\n\nExemplo de Resposta:\n\nUser: \"Pode marcar uma reunião para terça às 14h?\"\nResposta: \"Terça-feira às 14h está disponível. Poderia confirmar esse horário?\"\n\nUtilize a calculadora para calcular diferença de datas, horarios e dias.\n\n<OUTPUT>\nExemplo com eventId:\n\nsua mensagem aqui (eventId: 87aw898ad807d80s)\n\nExemplo sem eventId:\n\nsua mensagem aqui\n</OUTPUT>\n\n</INSTRUCAO>\n\n\n"
        }
      },
      "id": "9d6ca5b7-987b-4cb4-89ee-bdef4a89f6a6",
      "name": "Secretaria agendamento",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        280,
        0
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.query.numero }}",
        "tableName": "memoria_chat",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        380,
        220
      ],
      "id": "2ec22727-7fc1-4f86-b895-d0884a764af2",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "UDj9j4FpSusP0Vje",
          "name": "Postgres - Dinastia"
        }
      }
    }
  ],
  "connections": {
    "Deletar Evento1": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Criar Eventos1": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "gatilho": {
      "main": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_many": {
      "ai_tool": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Secretaria agendamento": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Secretaria agendamento",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "7b10ce35-85bc-4555-a12c-bfc9377973a4",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-12-25T22:36:34.390Z",
      "updatedAt": "2024-12-25T22:36:34.390Z",
      "id": "LEAmzU5MTFbZZxqk",
      "name": "Dinastia Odonto"
    }
  ]
}